<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[随风的博客]]></title>
  <link href="http://yinsigan.github.io/atom.xml" rel="self"/>
  <link href="http://yinsigan.github.io/"/>
  <updated>2017-09-05T18:14:57+08:00</updated>
  <id>http://yinsigan.github.io/</id>
  <author>
    <name><![CDATA[随风]]></name>
    <email><![CDATA[ganweiliang886@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[重装系统后如何重写你的Octopress博客]]></title>
    <link href="http://yinsigan.github.io/blog/2014/09/10/zhong-zhuang-xi-tong-hou-ru-he-zhong-xie-ni-de-octopressbo-ke/"/>
    <updated>2014-09-10T12:43:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/09/10/zhong-zhuang-xi-tong-hou-ru-he-zhong-xie-ni-de-octopressbo-ke</id>
    <content type="html"><![CDATA[<p>当你重装系统后，你可能需要重新安装开发环境和你的开发工具。如果你有用<a href="http://octopress.org/">Octopress</a>记录的习惯，这个时候就得从github上clone代码来重建整个octopress博客系统，以方便你还能继续你的写博客生涯。</p>

<h2>1.clone仓库代码</h2>

<figure class='code'><figcaption><span>克隆source分支的代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># git_repository_url是你的仓库地址</span>
</span><span class='line'><span class="n">git</span> <span class="nb">clone</span> <span class="n">git_repository_url</span> <span class="o">--</span><span class="n">branch</span><span class="o">=</span><span class="n">source</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>2.安装octopress</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>直到安装完所有gem就可以了</p>

<h2>3.添加ssh public key到github上</h2>

<p>首先需要生成ssh的public key</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh</span><span class="o">-</span><span class="n">keygen</span> <span class="o">-</span><span class="n">t</span> <span class="n">rsa</span> <span class="o">-</span><span class="n">C</span> <span class="s2">&quot;your_email@example.com&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 把输出的内容添加到github settings中SSH keys</span>
</span><span class='line'><span class="n">cat</span> <span class="o">~</span><span class="sr">/.ssh/i</span><span class="n">d_rsa</span><span class="o">.</span><span class="n">pub</span>
</span></code></pre></td></tr></table></div></figure>


<h2>4.新增一篇blog</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">new_post</span><span class="o">[</span><span class="s1">&#39;新增一篇blog&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>5.发布blog</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">setup_github_pages</span>
</span><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">gen_deploy</span>
</span></code></pre></td></tr></table></div></figure>


<h2>6.保存你的成果</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
</span><span class='line'><span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="s2">&quot;finished&quot;</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">source</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[嵌入式表单与多图片上传]]></title>
    <link href="http://yinsigan.github.io/blog/2014/02/19/qian-ru-shi-biao-dan-yu-duo-tu-pian-shang-chuan/"/>
    <updated>2014-02-19T12:17:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/02/19/qian-ru-shi-biao-dan-yu-duo-tu-pian-shang-chuan</id>
    <content type="html"><![CDATA[<h2>1.嵌入式表单</h2>

<ul>
<li><a href="http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html">accepts_nested_attributes_for</a></li>
</ul>


<p>当面对越来越复杂的业务逻辑时,你一定遇到过一个表单不止涉及到一个model,这个时候会添加或修改其他model的数据,例如下面的例子就是在创建一个用户(user),顺便发一篇文章(post)</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:posts_attributes</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:posts</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:posts</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:name</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>主要是利用了accepts_nested_attributes_for这个方法,它让user可以直接访问跟它有关系的(has_many posts)的posts中的数据,也就是说一旦更改或添加user时也会去处理相关联的posts中的数据</p>

<p>假如我们在创建posts的时候默认至少可以添加三篇posts</p>

<figure class='code'><figcaption><span>app/controller/users_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">new</span>
</span><span class='line'>  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="mi">3</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="vi">@user</span><span class="o">.</span><span class="n">posts</span><span class="o">.</span><span class="n">build</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.times { @user.posts.build }就是代表初始化了三个posts</p>

<p>然后在view里可以创建三个posts</p>

<figure class='code'><figcaption><span>app/views/users/_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;add_posts&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% @user.posts.each </span><span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;%= fields_for &quot;user[posts_attributes][]&quot;, post do |task_form| %&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="ss">Task</span><span class="p">:</span> <span class="o">&lt;%=</span> <span class="n">task_form</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:name</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">      &lt;/p&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">  &lt;% end %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>fields_for的作用是生成嵌入式表单相关的域(input),关键在于<code>user[posts_attributes][]</code></p>

<p>它生成的input是这样的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p&gt;</span>Task: <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">&quot;user_posts_attributes__name&quot;</span> <span class="na">name=</span><span class="s">&quot;user[posts_attributes][][name]&quot;</span> <span class="na">size=</span><span class="s">&quot;30&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>input中name属性的值必须正确</p>

<p>它有什么讲究呢,这就要看<a href="http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html">accepts_nested_attributes_for</a>了</p>

<p>只能添加三个posts肯定不够,我们需要添加无数个posts</p>

<figure class='code'><figcaption><span>app/views/users/_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;javascript:void(0)&quot;</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;add&quot;</span><span class="o">&gt;</span><span class="err">点击我添加一个</span><span class="n">post</span><span class="o">&lt;</span><span class="sr">/a&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;script&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  $(&quot;#add&quot;).click(function() {</span>
</span><span class='line'><span class="sr">    $(&#39;&lt;p&gt;Task: &lt;input id=&quot;user_posts_attributes__name&quot; name=&quot;user[posts_attributes][][name]&quot; size=&quot;30&quot; type=&quot;text&quot;&gt;&lt;p&gt;&#39;).appendTo(&quot;#add_posts&quot;);</span>
</span><span class='line'><span class="sr">  })</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;/s</span><span class="n">cript</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>试一下吧</p>

<h2>2. 多图片上传</h2>

<p>先说嵌入式表单,是因为在多图片上传中我们要应用到它的原理</p>

<p>图片上传主要是用到<a href="blog/2014/02/12/carrierwavetu-pian-shang-chuan-de-jian-dan-shi-yong/">carrierwave</a></p>

<p>这里我们要用到<a href="blog/2013/12/10/rails-association/">多态</a>,首先我们创建一个model叫attachment,这个model是用作存上传图片的信息吧</p>

<p>它主要包括三个字段attachmentable_id, attachmentable_type, image</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Attachment</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:attachmentable_id</span><span class="p">,</span> <span class="ss">:attachmentable_type</span><span class="p">,</span> <span class="ss">:image</span><span class="p">,</span> <span class="ss">:image_cache</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:attachmentable</span><span class="p">,</span> <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">mount_uploader</span> <span class="ss">:image</span><span class="p">,</span> <span class="no">AvatarUploader</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>有了attachmentable这个<a href="blog/2013/12/10/rails-association/">多态</a>,以后要用到图片上传的model都可以跟attachment关联起来了</p>

<p>假如user这个model就要用到多图片上传</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:attachments</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:attachmentable</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:attachments</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>还是跟上面一样,假设默认最少可以添加三个图片</p>

<figure class='code'><figcaption><span>app/controllers/users_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">new</span>
</span><span class='line'>  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="mi">3</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="vi">@user</span><span class="o">.</span><span class="n">attachments</span><span class="o">.</span><span class="n">build</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后,view是这样的</p>

<figure class='code'><figcaption><span>app/views/users/_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;add_posts&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% @user.attachments.each </span><span class="k">do</span> <span class="o">|</span><span class="n">attachment</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;%= fields_for &quot;user[attachments_attributes][]&quot;, attachment do |task_form| %&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="ss">attachment</span><span class="p">:</span> <span class="o">&lt;</span><span class="sx">%= task_form.file_field :image %&gt;</span>
</span><span class='line'><span class="sx">        &lt;%=</span> <span class="n">task_form</span><span class="o">.</span><span class="n">hidden_field</span> <span class="ss">:image_cache</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">      &lt;/p&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">  &lt;% end %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>记得form表单添加这个属性entrype=&ldquo;multipart/form-data&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="vi">@user</span><span class="p">,</span> <span class="ss">html</span><span class="p">:</span> <span class="p">{</span><span class="ss">enctype</span><span class="p">:</span> <span class="s2">&quot;multipart/form-data&quot;</span><span class="p">})</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以添加无数个图片</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;javascript:void(0)&quot;</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;add&quot;</span><span class="o">&gt;</span><span class="err">点击我添加一个</span><span class="n">attachment</span><span class="o">&lt;</span><span class="sr">/a&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">$(&quot;#add&quot;).click(function() {</span>
</span><span class='line'><span class="sr">  $(&#39;&lt;p&gt;attachment: &lt;input id=&quot;user_attachments_attributes_image&quot; name=&quot;user[attachments_attributes][][image]&quot; size=&quot;30&quot; type=&quot;file&quot;&gt;&lt;p&gt;&#39;).appendTo(&quot;#add_posts&quot;);</span>
</span><span class='line'><span class="sr">})</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CarrierWave图片上传的简单使用]]></title>
    <link href="http://yinsigan.github.io/blog/2014/02/12/carrierwavetu-pian-shang-chuan-de-jian-dan-shi-yong/"/>
    <updated>2014-02-12T16:02:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/02/12/carrierwavetu-pian-shang-chuan-de-jian-dan-shi-yong</id>
    <content type="html"><![CDATA[<p>使用CarrierWave这个gem来完成图片上传和使用mini_magick这个gem来处理上传的图片</p>

<h2>1. <a href="https://github.com/carrierwaveuploader/carrierwave">CarrierWave</a></h2>

<h3>1.1 安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;carrierwave&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>1.2 生成uploader</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">uploader</span> <span class="no">Avatar</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 这是生成的文件</span>
</span><span class='line'><span class="n">app</span><span class="o">/</span><span class="n">uploaders</span><span class="o">/</span><span class="n">avatar_uploader</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>


<h3>1.3 添加图片的字段</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">migration</span> <span class="n">add_image_to_articles</span> <span class="ss">image</span><span class="p">:</span><span class="n">string</span>
</span></code></pre></td></tr></table></div></figure>


<p>image存储是文件名</p>

<h3>1.4 挂载那个uploader</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:content</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:image</span><span class="p">,</span> <span class="ss">:remote_image_url</span>
</span><span class='line'>  <span class="n">mount_uploader</span> <span class="ss">:image</span><span class="p">,</span> <span class="no">AvatarUploader</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>1.5 给表单加上图片上传的域</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;field&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="err">&lt;</span>%= f.label :image %&gt;<span class="nt">&lt;br</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="err">&lt;</span>%= f.file_field :image %&gt;
</span><span class='line'>  <span class="err">&lt;</span>%= f.hidden_field :image_cache %&gt;
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>1.6 引用上传的图片地址</h3>

<figure class='code'><figcaption><span>app/views/articles/show.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">image_tag</span> <span class="vi">@article</span><span class="o">.</span><span class="n">image_url</span><span class="o">.</span><span class="n">to_s</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样就可以上传图片了,默认图片是存储在public那个文件夹中</p>

<h3>1.7 远程图片</h3>

<figure class='code'><figcaption><span>app/views/articles/show.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= f.label :remote_image_url, &quot;or image URL&quot; %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:remote_image_url</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. MiniMagick处理图片</h2>

<h3>2.1 安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;mini_magick&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/uploaders/avatar_uploader.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">include</span> <span class="ss">CarrierWave</span><span class="p">:</span><span class="ss">:MiniMagick</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2.2 裁减图片</h3>

<figure class='code'><figcaption><span>app/uploaders/avatar_uploader.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">version</span> <span class="ss">:thumb</span> <span class="k">do</span>
</span><span class='line'> <span class="n">process</span> <span class="ss">:resize_to_limit</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/views/articles/show.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">image_tag</span> <span class="vi">@article</span><span class="o">.</span><span class="n">image_url</span><span class="p">(</span><span class="ss">:thumb</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2.3 增加模糊</h3>

<figure class='code'><figcaption><span>app/uploaders/avatar_uploader.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># radial_blur为模糊的程度</span>
</span><span class='line'><span class="n">process</span> <span class="ss">:radial_blur</span> <span class="o">=&gt;</span> <span class="mi">2</span>
</span><span class='line'><span class="k">def</span> <span class="nf">radial_blur</span><span class="p">(</span><span class="n">amount</span><span class="p">)</span>
</span><span class='line'>  <span class="n">manipulate!</span> <span class="k">do</span> <span class="o">|</span><span class="n">img</span><span class="o">|</span>
</span><span class='line'>    <span class="n">img</span><span class="o">.</span><span class="n">radial_blur</span><span class="p">(</span><span class="n">amount</span><span class="p">)</span>
</span><span class='line'>    <span class="n">img</span> <span class="o">=</span> <span class="k">yield</span><span class="p">(</span><span class="n">img</span><span class="p">)</span> <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="n">img</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2.4 旋转</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">process</span> <span class="ss">:sample_rotate</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;90%&quot;</span><span class="p">,</span> <span class="s2">&quot;-80&gt;&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">def</span> <span class="nf">sample_rotate</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span> <span class="n">rotate</span><span class="p">)</span>
</span><span class='line'>  <span class="n">manipulate!</span> <span class="k">do</span> <span class="o">|</span><span class="n">img</span><span class="o">|</span>
</span><span class='line'>    <span class="n">img</span><span class="o">.</span><span class="n">combine_options</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span>
</span><span class='line'>      <span class="n">c</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="n">sample</span><span class="p">)</span>
</span><span class='line'>      <span class="n">c</span><span class="o">.</span><span class="n">rotate</span><span class="p">(</span><span class="n">rotate</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">img</span> <span class="o">=</span> <span class="k">yield</span><span class="p">(</span><span class="n">img</span><span class="p">)</span> <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="n">img</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2.5 加水印</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">process</span> <span class="ss">:make_watermark</span> <span class="o">=&gt;</span> <span class="s2">&quot;你的图片的地址&quot;</span>
</span><span class='line'><span class="k">def</span> <span class="nf">make_watermark</span><span class="p">(</span><span class="n">watermark</span><span class="p">)</span>
</span><span class='line'>  <span class="n">manipulate!</span> <span class="k">do</span> <span class="o">|</span><span class="n">img</span><span class="o">|</span>
</span><span class='line'>    <span class="n">img</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">composite</span><span class="p">(</span><span class="ss">MiniMagick</span><span class="p">:</span><span class="ss">:Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">watermark</span><span class="p">,</span> <span class="s2">&quot;jpg&quot;</span><span class="p">))</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span>
</span><span class='line'>      <span class="n">c</span><span class="o">.</span><span class="n">gravity</span> <span class="s2">&quot;SouthEast&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">img</span> <span class="o">=</span> <span class="k">yield</span><span class="p">(</span><span class="n">img</span><span class="p">)</span> <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="n">img</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>打水印的位置可以是&#8217;Center&#8217;, &lsquo;NorthWest&rsquo;, &lsquo;North&rsquo;, &lsquo;NorthEast&rsquo;, &lsquo;West&rsquo;, &lsquo;Center&rsquo;, &lsquo;East&rsquo;, &lsquo;SouthWest&rsquo;, &lsquo;South&rsquo;, &lsquo;SouthEast&rsquo;</p>

<h3>2.6 转化格式</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">process</span> <span class="ss">:convert</span> <span class="o">=&gt;</span> <span class="s1">&#39;png&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">filename</span>
</span><span class='line'>  <span class="k">super</span><span class="o">.</span><span class="n">chomp</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">extname</span><span class="p">(</span><span class="k">super</span><span class="p">))</span> <span class="o">+</span> <span class="s1">&#39;.png&#39;</span> <span class="k">if</span> <span class="n">original_filename</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>更多的用法可以看这里<a href="https://github.com/carrierwaveuploader/carrierwave/blob/master/lib/carrierwave/processing/mini_magick.rb">https://github.com/carrierwaveuploader/carrierwave/blob/master/lib/carrierwave/processing/mini_magick.rb</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery tree的介绍和简单使用]]></title>
    <link href="http://yinsigan.github.io/blog/2014/02/12/jquery-treede-jie-shao-he-jian-dan-shi-yong/"/>
    <updated>2014-02-12T11:24:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/02/12/jquery-treede-jie-shao-he-jian-dan-shi-yong</id>
    <content type="html"><![CDATA[<p>这节来介绍树(tree)形菜单的使用</p>

<p>首先通过介绍<a href="https://github.com/jzaefferer/jquery-treeview">jquery treeview</a>的使用来了解树形菜单,最后会介绍几种jquery tree的特性</p>

<!-- more -->


<h3>1. jquery treeview</h3>

<p>这个tree支持引导线的显示,支持图片,支持ajax,给我感觉中规中距</p>

<h4>1.1 安装</h4>

<p>下载所有的图片文件,还有jquery.treeview.js和jquery.treeview.css</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= javascript_link_tag &quot;jquery.treeview&quot; %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s2">&quot;jquery.treeview&quot;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note: 如果发现图片没有找到,应该根据你图片的存储位置,更改jquery.treeview.css中的background-image中的路径,直到正确为止.</p>

<h4>1.2 添加html</h4>

<p>html为ul li结构,只要按照类似的结构姐织代码就可以,如果有使用ancestry这种gem,可以用它来生成html代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;browser&quot;</span> <span class="na">class=</span><span class="s">&quot;filetree treeview-famfamfam&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;folder&quot;</span><span class="nt">&gt;</span>Folder 1<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;folder&quot;</span><span class="nt">&gt;</span>Item 1.1<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;file&quot;</span><span class="nt">&gt;</span>Item 1.1.1<span class="nt">&lt;/span&gt;&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;folder&quot;</span><span class="nt">&gt;</span>Folder 2<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;folder&quot;</span><span class="nt">&gt;</span>Subfolder 2.1<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;folder21&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;file&quot;</span><span class="nt">&gt;</span>File 2.1.1<span class="nt">&lt;/span&gt;&lt;/li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;file&quot;</span><span class="nt">&gt;</span>File 2.1.2<span class="nt">&lt;/span&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;folder&quot;</span><span class="nt">&gt;</span>Subfolder 2.2<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;file&quot;</span><span class="nt">&gt;</span>File 2.2.1<span class="nt">&lt;/span&gt;&lt;/li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;file&quot;</span><span class="nt">&gt;</span>File 2.2.2<span class="nt">&lt;/span&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;closed&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;folder&quot;</span><span class="nt">&gt;</span>Folder 3 (closed at start)<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;file&quot;</span><span class="nt">&gt;</span>File 3.1<span class="nt">&lt;/span&gt;&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;file&quot;</span><span class="nt">&gt;</span>File 4<span class="nt">&lt;/span&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1.3 添加javascript</h4>

<p>只要一个函数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#browser&quot;</span><span class="p">).</span><span class="nx">treeview</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">toggle</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;%s was toggled.&quot;</span><span class="p">,</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;&gt;span&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1.4 有图片的</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;browser&quot;</span> <span class="na">class=</span><span class="s">&quot;filetree&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;folder.gif&quot;</span> <span class="nt">/&gt;</span> 123<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>blabla <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;file.gif&quot;</span> <span class="nt">/&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;folder.gif&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;folder.gif&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;folder21&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;file.gif&quot;</span> <span class="nt">/&gt;</span> more text<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li&gt;</span>and here, too<span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;file.gif&quot;</span> <span class="nt">/&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;file.gif&quot;</span> <span class="nt">/&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;closed&quot;</span><span class="nt">&gt;</span>this is closed! <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;folder.gif&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;file.gif&quot;</span> <span class="nt">/&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;file.gif&quot;</span> <span class="nt">/&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. 几种jquery tree</h3>

<h4>2.1 <a href="http://jtree.tk/index">jtree</a></h4>

<ul>
<li>简单使用</li>
<li>支持拖拽</li>
<li>插入新元素</li>
<li>事件功能</li>
</ul>


<p>它的功能比treeview强大些</p>

<h4>2.2 <a href="https://github.com/mbraak/jqTree">jqTree</a></h4>

<ul>
<li>界面简洁清爽</li>
<li>帮助文档详细</li>
<li>支持从JSON创建树</li>
<li>支持拖拽,拖拽动画效果显示良好</li>
<li>功能强大,可设置参数和事件多</li>
</ul>


<p>如果需要从JSON获得数据来建tree,选择这款不错</p>

<h4>2.3 <a href="http://www.ztree.me/hunter/zTree.html">zTree</a></h4>

<p>zTree的功能最强大了,如果要做复杂的tree就用它了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jbuilder &amp; rabl &amp; gon简单使用]]></title>
    <link href="http://yinsigan.github.io/blog/2014/02/11/jbuilder-and-rabl-and-gonjian-dan-shi-yong/"/>
    <updated>2014-02-11T14:56:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/02/11/jbuilder-and-rabl-and-gonjian-dan-shi-yong</id>
    <content type="html"><![CDATA[<p>这节介绍几个和json处理有关的gem(大部分的内容跟railscasts的差不多,在这里只是进行汇总和总结,方便查看)</p>

<p>用rails在默认情况下就能产生json</p>

<p>是这样的</p>

<figure class='code'><figcaption><span>app/controllers/articles_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># GET /articles/1</span>
</span><span class='line'><span class="c1"># GET /articles/1.json</span>
</span><span class='line'><span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="vi">@article</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># new.html.erb</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@article</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>看到那个/articles/1.json没有,默认情况下你在浏览器访问/articles/1.json就能返回json了,是这个format.json { render json: @article }</p>

<p>@article拥有as_json这样的方法可以格式化json的输出,具体的使用可以查看<a href="http://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html">rails as_json api</a></p>

<p>这种方法还是有局限性,不能灵活自定义json的输出,例如不能改写字段的名字</p>

<p>先删除掉respond_to那段代码</p>

<p>下面我们来介绍两个可以产生json的gem:<a href="https://github.com/rails/jbuilder">jbuilder</a>和<a href="https://github.com/nesquena/rabl">rabl</a></p>

<h3>1. <a href="https://github.com/rails/jbuilder">jbuilder</a></h3>

<h4>1.1 这个gem在rails中是被注释掉的,开启它就可以用了</h4>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;jbuilder&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1.2 新增jbuilder的模板文件</h4>

<h5>1.2.1 最简单的方式</h5>

<figure class='code'><figcaption><span>app/views/articles/show.json.jbuilder</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">id</span> <span class="vi">@article</span><span class="o">.</span><span class="n">id</span>
</span><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">title</span> <span class="vi">@article</span><span class="o">.</span><span class="n">title</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出一个json,键为id和title(json之后的词)</p>

<h5>1.2.2 不写键名,默认用字段名</h5>

<figure class='code'><figcaption><span>app/views/articles/show.json.jbuilder</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">extract!</span> <span class="vi">@article</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:updated_at</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出的结果为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;title&quot;</span><span class="ss">:&quot;dddddd&quot;</span><span class="p">,</span><span class="s2">&quot;updated_at&quot;</span><span class="ss">:&quot;2014-02-09T01:58:47Z&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>1.2.3 extract!的简写方式</h5>

<figure class='code'><figcaption><span>app/views/articles/show.json.jbuilder</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="p">(</span><span class="vi">@article</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:updated_at</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h5>1.2.4 自己加一个key</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">edit_url</span> <span class="n">edit_article_url</span><span class="p">(</span><span class="vi">@article</span><span class="p">)</span> <span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">admin?</span>
</span></code></pre></td></tr></table></div></figure>


<h5>1.2.5 关联一个对象</h5>

<p>如果article属于user</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">user</span> <span class="vi">@article</span><span class="o">.</span><span class="n">user</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;title&quot;</span><span class="ss">:&quot;dddddd&quot;</span><span class="p">,</span><span class="s2">&quot;updated_at&quot;</span><span class="ss">:&quot;2014-02-09T01:58:47Z&quot;</span><span class="p">,</span><span class="s2">&quot;user&quot;</span><span class="p">:{</span><span class="s2">&quot;id&quot;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="ss">:&quot;xxx&quot;</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>jbuilder还有许多其他功能,例如partial,array等</p>

<h3>2. <a href="https://github.com/nesquena/rabl">rabl</a></h3>

<p>rabl相比于jbuilder,个人觉得更具有可读性</p>

<h4>2.1 安装</h4>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rabl&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.2 使用</h4>

<p>它的模版更简单</p>

<h5>2.2.1 最简单的方式</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">object</span> <span class="vi">@article</span>
</span><span class='line'><span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:title</span>
</span></code></pre></td></tr></table></div></figure>


<h5>2.2.2 添加一个key</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">node</span><span class="p">(</span><span class="ss">:edit_url</span><span class="p">)</span> <span class="p">{</span> <span class="s2">&quot;...&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.2.3 关联</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">child</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">child</span> <span class="ss">:comments</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:content</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.2.4 partial</h4>

<figure class='code'><figcaption><span>index.json.rabl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">collection</span> <span class="vi">@articles</span>
</span><span class='line'><span class="n">extends</span> <span class="s2">&quot;articles/show&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.2.5 去掉Root Nodes</h4>

<p>也就是去掉那个&#8221;article&#8221;</p>

<figure class='code'><figcaption><span>config/initializers/rabl_config.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rabl</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">include_json_root</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.2.6 Embedding JSON in a Web Page</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;articles&quot;</span> <span class="n">data</span><span class="o">-</span><span class="n">articles</span><span class="o">=</span><span class="s2">&quot;&lt;%= render(template: &quot;</span><span class="n">articles</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">json</span><span class="o">.</span><span class="n">rabl</span><span class="s2">&quot;) %&gt;&quot;</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>rabl github上的readme介绍了更好的用法,可以自定于key的名字,还有很多的配置选项</p>

<h3>3. <a href="https://github.com/gazay/gon">gon</a></h3>

<p>之所以要介绍这个gem,并不是因为它是产生json的,而它能把前面两个gem结合起来</p>

<p>它的作用是传递变量给javascript(Passing Data to JavaScript)</p>

<h4>3.1 安装</h4>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;gon&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/views/layouts/application.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="no">Store</span><span class="o">&lt;</span><span class="sr">/title&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= include_gon %&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= stylesheet_link_tag    &quot;application&quot;, media: &quot;all&quot; %&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= javascript_include_tag &quot;application&quot; %&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= csrf_meta_tag %&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">head</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3.2 简单使用</h4>

<figure class='code'><figcaption><span>app/controllers/articles_controlle.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="n">gon</span><span class="o">.</span><span class="n">articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/assets/javascripts/articles.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Jquery</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="n">console</span><span class="o">.</span><span class="n">log</span> <span class="n">gon</span><span class="o">.</span><span class="n">articles</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3.3 和rabl结合</h4>

<figure class='code'><figcaption><span>app/controllers/articles_controlle.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="n">gon</span><span class="o">.</span><span class="n">rabl</span> <span class="s2">&quot;app/views/articles/index.json.rabl&quot;</span><span class="p">,</span> <span class="ss">as</span><span class="p">:</span> <span class="s2">&quot;articles&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/assets/javascripts/articles.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">alert</span> <span class="n">gon</span><span class="o">.</span><span class="n">articles</span> <span class="k">if</span> <span class="n">gon</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery tags-input &amp; jquery tag-it]]></title>
    <link href="http://yinsigan.github.io/blog/2014/02/10/jquery-tags-input-and-jquery-tag-it/"/>
    <updated>2014-02-10T10:17:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/02/10/jquery-tags-input-and-jquery-tag-it</id>
    <content type="html"><![CDATA[<p>标签大家肯定很熟悉,在文章中你可能会使用标签,你或许看过土豆视频的标签，或许看过京东商品的标签。这节我们在rails中分别使用tag-it和tags-input这两种关于标签的库,这两种库可以和<a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on</a>结合使用</p>

<h3>1. <a href="https://github.com/aehlke/tag-it">tag-it</a></h3>

<p>这个库要利用jquery和jquery ui这两种库</p>

<p>jquery在rails默认是开启的,现在来开启jquery ui这个库</p>

<!-- more -->


<h4>1.1 使用<code>jquery-ui-rails</code>这个gem</h4>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:assets</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;jquery-ui-rails&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>application.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//= require jquery.ui.all</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>application.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">*=</span> <span class="nt">require</span> <span class="nt">jquery</span><span class="nc">.ui.all</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1.2 下载tag-it中tag-it.js和tagit.ui-zendesk.css和jquery.tagit文件</h4>

<p>在layouts中引用这些文件</p>

<figure class='code'><figcaption><span>application.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= javascript_include_tag &quot;tag-it&quot; %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span class="s2">&quot;tagit.ui-zendesk&quot;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= stylesheet_link_tag    &quot;jquery.tagit&quot;, :media =&gt;</span> <span class="s2">&quot;all&quot;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1.3 使用这个库</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">input</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;myTags&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">script</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="err">$</span><span class="p">(</span><span class="n">document</span><span class="p">)</span><span class="o">.</span><span class="n">ready</span><span class="p">(</span><span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="err">$</span><span class="p">(</span><span class="s2">&quot;#myTags&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">tagit</span><span class="p">({</span>
</span><span class='line'>        <span class="ss">afterTagAdded</span><span class="p">:</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="sr">//</span> <span class="k">do</span> <span class="n">something</span> <span class="n">special</span>
</span><span class='line'>          <span class="err">$</span><span class="p">(</span><span class="n">this</span><span class="p">)</span><span class="o">.</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="err">$</span><span class="p">(</span><span class="n">this</span><span class="p">)</span><span class="o">.</span><span class="n">tagit</span><span class="p">(</span><span class="s2">&quot;assignedTags&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">));</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>        <span class="ss">afterTagRemoved</span><span class="p">:</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="sr">//</span> <span class="k">do</span> <span class="n">something</span> <span class="n">special</span>
</span><span class='line'>          <span class="sr">//</span> <span class="err">$</span><span class="p">(</span><span class="n">this</span><span class="p">)</span><span class="o">.</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="err">$</span><span class="p">(</span><span class="n">this</span><span class="p">)</span><span class="o">.</span><span class="n">tagit</span><span class="p">(</span><span class="s2">&quot;assignedTags&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">));</span>
</span><span class='line'>          <span class="err">$</span><span class="p">(</span><span class="n">this</span><span class="p">)</span><span class="o">.</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="err">$</span><span class="p">(</span><span class="n">this</span><span class="p">)</span><span class="o">.</span><span class="n">tagit</span><span class="p">(</span><span class="s2">&quot;assignedTags&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">));</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. <a href="https://github.com/xoxco/jQuery-Tags-Input">tags-input</a></h3>

<p>这个库比较简单使用</p>

<h4>2.1 下载源文件, jquery.tagsinput.js和jquery.tagsinput.css</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= stylesheet_link_tag &quot;jquery.tagsinput&quot;, :media =</span><span class="o">&gt;</span> <span class="s2">&quot;all&quot;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= stylesheet_link_tag &quot;jquery.tagsinput&quot; %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.2 使用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">input</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;tags&quot;</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;tags&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s2">&quot;foo,bar,baz&quot;</span> <span class="sr">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">$(&#39;#tags&#39;).tagsInput({</span>
</span><span class='line'><span class="sr">  onChange: function() {</span>
</span><span class='line'><span class="sr">    $(this).attr(&quot;value&quot;, $(this).val());</span>
</span><span class='line'><span class="sr">  }</span>
</span><span class='line'><span class="sr">});</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails-settings源码分析]]></title>
    <link href="http://yinsigan.github.io/blog/2014/02/08/rails-settingsyuan-ma-fen-xi/"/>
    <updated>2014-02-08T09:34:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/02/08/rails-settingsyuan-ma-fen-xi</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/ledermann/rails-settings">rails-settings</a></p>

<h3>1. 数据库结构</h3>

<p>var: string 键</p>

<p>value: text 值,存的是hash</p>

<p>target_id: integer  多态的id</p>

<p>target_type: string 多态的类</p>

<h3>2. 源码文件结构</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lib
</span><span class='line'>├── rails-settings
</span><span class='line'>│   ├── base.rb 定义了settings和settings=方法
</span><span class='line'>│   ├── configuration.rb 操作has_settings的symbol列表和定义了default_settings
</span><span class='line'>│   ├── scopes.rb  一些查询方法
</span><span class='line'>│   ├── setting_object.rb 操作settings表
</span><span class='line'>│   └── version.rb
</span><span class='line'>└── rails-settings.rb</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>3. has_settings</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">has_settings</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="ss">RailsSettings</span><span class="p">:</span><span class="ss">:Configuration</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="o">.</span><span class="n">unshift</span><span class="p">(</span><span class="nb">self</span><span class="p">),</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">include</span> <span class="ss">RailsSettings</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="kp">extend</span> <span class="ss">RailsSettings</span><span class="p">:</span><span class="ss">:Scopes</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>也就是说任何model有has_settings这个方法</p>

<p>现在来看下它是如何使用的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_settings</span> <span class="ss">:dashboard</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>这是has_settings最简单的使用方法了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">u</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">u</span><span class="o">.</span><span class="n">settings</span><span class="p">(</span><span class="ss">:dashboard</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">SELECT</span> <span class="sb">`settings`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`settings`</span> <span class="no">WHERE</span> <span class="sb">`settings`</span><span class="o">.</span><span class="n">`target_id</span><span class="sb">` = 1 AND `</span><span class="n">settings</span><span class="sb">`.`</span><span class="n">target_type</span><span class="sb">` = &#39;User&#39;</span>
</span><span class='line'><span class="sb">   #&lt;RailsSettings::SettingObject id: nil, var: &quot;dashboard&quot;, value: {}, target_id: 1, target_type: &quot;User&quot;, created_at: nil, updated_at: nil&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>有两个关键的方法是has_settings和settings方法</p>

<p>由<code>include RailsSettings::Base</code>我们先来看lib/rails-settings/base.rb这个文件的内容</p>

<h3>4. settings和settings=方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">RailsSettings</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Base</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>      <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">has_many</span> <span class="ss">:setting_objects</span><span class="p">,</span>
</span><span class='line'>                 <span class="c1"># settings表中的target_id和target_type</span>
</span><span class='line'>                 <span class="ss">:as</span>         <span class="o">=&gt;</span> <span class="ss">:target</span><span class="p">,</span>
</span><span class='line'>                 <span class="ss">:autosave</span>   <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>                 <span class="ss">:dependent</span>  <span class="o">=&gt;</span> <span class="ss">:delete_all</span><span class="p">,</span>
</span><span class='line'>                 <span class="c1"># 类的名字我们可以自定义</span>
</span><span class='line'>                 <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="o">.</span><span class="n">setting_object_class_name</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># 返回值</span>
</span><span class='line'>        <span class="k">def</span> <span class="nf">settings</span><span class="p">(</span><span class="n">var</span><span class="p">)</span>
</span><span class='line'>          <span class="c1"># 必须存一个symbol</span>
</span><span class='line'>          <span class="k">raise</span> <span class="no">ArgumentError</span> <span class="k">unless</span> <span class="n">var</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Symbol</span><span class="p">)</span>
</span><span class='line'>          <span class="c1"># 而且key是必须存在的</span>
</span><span class='line'>          <span class="k">raise</span> <span class="no">ArgumentError</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;Unknown key: </span><span class="si">#{</span><span class="n">var</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">default_settings</span><span class="o">[</span><span class="n">var</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:VERSION</span><span class="o">::</span><span class="no">MAJOR</span> <span class="o">&lt;</span> <span class="mi">4</span>
</span><span class='line'>            <span class="n">setting_objects</span><span class="o">.</span><span class="n">detect</span> <span class="p">{</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span> <span class="n">s</span><span class="o">.</span><span class="n">var</span> <span class="o">==</span> <span class="n">var</span><span class="o">.</span><span class="n">to_s</span> <span class="p">}</span> <span class="o">||</span> <span class="n">setting_objects</span><span class="o">.</span><span class="n">build</span><span class="p">({</span> <span class="ss">:var</span> <span class="o">=&gt;</span> <span class="n">var</span><span class="o">.</span><span class="n">to_s</span> <span class="p">},</span> <span class="ss">:without_protection</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>          <span class="k">else</span>
</span><span class='line'>            <span class="n">setting_objects</span><span class="o">.</span><span class="n">detect</span> <span class="p">{</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span> <span class="n">s</span><span class="o">.</span><span class="n">var</span> <span class="o">==</span> <span class="n">var</span><span class="o">.</span><span class="n">to_s</span> <span class="p">}</span> <span class="o">||</span> <span class="n">setting_objects</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">:var</span> <span class="o">=&gt;</span> <span class="n">var</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="ss">:target</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">def</span> <span class="nf">settings</span><span class="o">=</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">value</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>            <span class="n">setting_objects</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:mark_for_destruction</span><span class="p">)</span>
</span><span class='line'>          <span class="k">else</span>
</span><span class='line'>            <span class="k">raise</span> <span class="no">ArgumentError</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># 判断值的存在性</span>
</span><span class='line'>        <span class="k">def</span> <span class="nf">settings?</span><span class="p">(</span><span class="n">var</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">var</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>            <span class="n">setting_objects</span><span class="o">.</span><span class="n">any?</span> <span class="p">{</span> <span class="o">|</span><span class="n">setting_object</span><span class="o">|</span> <span class="o">!</span><span class="n">setting_object</span><span class="o">.</span><span class="n">marked_for_destruction?</span> <span class="o">&amp;&amp;</span> <span class="n">setting_object</span><span class="o">.</span><span class="n">value</span><span class="o">.</span><span class="n">present?</span> <span class="p">}</span>
</span><span class='line'>          <span class="k">else</span>
</span><span class='line'>            <span class="n">settings</span><span class="p">(</span><span class="n">var</span><span class="p">)</span><span class="o">.</span><span class="n">value</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># 返回成hash</span>
</span><span class='line'>        <span class="k">def</span> <span class="nf">to_settings_hash</span>
</span><span class='line'>          <span class="n">settings_hash</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">default_settings</span>
</span><span class='line'>          <span class="n">settings_hash</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">var</span><span class="p">,</span> <span class="n">vals</span><span class="o">|</span>
</span><span class='line'>            <span class="n">settings_hash</span><span class="o">[</span><span class="n">var</span><span class="o">]</span> <span class="o">=</span> <span class="n">settings_hash</span><span class="o">[</span><span class="n">var</span><span class="o">].</span><span class="n">merge</span><span class="p">(</span><span class="n">settings</span><span class="p">(</span><span class="n">var</span><span class="o">.</span><span class="n">to_sym</span><span class="p">)</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>          <span class="n">settings_hash</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的代码(has_many :setting_objects)现在还不明白具体的含义,因为我们不知道setting_objects这个是什么东西</p>

<p>我们来看下lib/rails-settings/setting_objects.rb这个文件的内容</p>

<h3>5. setting_objects和settings表</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">RailsSettings</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">SettingObject</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="c1"># 定义了表名</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">table_name</span> <span class="o">=</span> <span class="s1">&#39;settings&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 多态</span>
</span><span class='line'>    <span class="n">belongs_to</span> <span class="ss">:target</span><span class="p">,</span> <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">validates_presence_of</span> <span class="ss">:var</span><span class="p">,</span> <span class="ss">:value</span><span class="p">,</span> <span class="ss">:target_type</span>
</span><span class='line'>    <span class="n">validate</span> <span class="k">do</span>
</span><span class='line'>      <span class="k">unless</span> <span class="n">_target_class</span><span class="o">.</span><span class="n">default_settings</span><span class="o">[</span><span class="n">var</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span>
</span><span class='line'>        <span class="n">errors</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="ss">:var</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">var</span><span class="si">}</span><span class="s2"> is not defined!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">serialize</span> <span class="ss">:value</span><span class="p">,</span> <span class="no">Hash</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># attr_protected can not be here used because it touches the database which is not connected yet.</span>
</span><span class='line'>    <span class="c1"># So allow no attributes and override &lt;tt&gt;#sanitize_for_mass_assignment&lt;/tt&gt;</span>
</span><span class='line'>    <span class="k">if</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:VERSION</span><span class="o">::</span><span class="no">MAJOR</span> <span class="o">&lt;</span> <span class="mi">4</span>
</span><span class='line'>      <span class="n">attr_accessible</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">REGEX_SETTER</span> <span class="o">=</span> <span class="sr">/\A([a-z]\w+)=\Z/i</span>
</span><span class='line'>    <span class="no">REGEX_GETTER</span> <span class="o">=</span> <span class="sr">/\A([a-z]\w+)\Z/i</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">respond_to?</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="n">include_priv</span><span class="o">=</span><span class="kp">false</span><span class="p">)</span>
</span><span class='line'>      <span class="k">super</span> <span class="o">||</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="no">REGEX_SETTER</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 当执行u.settings(:dashboard).theme时会用到</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="c1"># 当执行.var时</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">attribute_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">))</span>
</span><span class='line'>          <span class="k">super</span>
</span><span class='line'>        <span class="k">elsif</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="no">REGEX_SETTER</span> <span class="o">&amp;&amp;</span> <span class="n">args</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>          <span class="err">＃</span> <span class="err">当有给值的时候</span>
</span><span class='line'>          <span class="n">_set_value</span><span class="p">(</span><span class="vg">$1</span><span class="p">,</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="p">)</span>
</span><span class='line'>        <span class="k">elsif</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="no">REGEX_GETTER</span> <span class="o">&amp;&amp;</span> <span class="n">args</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>          <span class="c1"># 当没有值的时候就取值</span>
</span><span class='line'>          <span class="n">_get_value</span><span class="p">(</span><span class="vg">$1</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="k">super</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">protected</span>
</span><span class='line'>    <span class="k">if</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:VERSION</span><span class="o">::</span><span class="no">MAJOR</span> <span class="o">&lt;</span> <span class="mi">4</span>
</span><span class='line'>      <span class="c1"># Simulate attr_protected by removing all regular attributes</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">sanitize_for_mass_assignment</span><span class="p">(</span><span class="n">attributes</span><span class="p">,</span> <span class="n">role</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>        <span class="n">attributes</span><span class="o">.</span><span class="n">except</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="s1">&#39;var&#39;</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="s1">&#39;target_id&#39;</span><span class="p">,</span> <span class="s1">&#39;target_type&#39;</span><span class="p">,</span> <span class="s1">&#39;created_at&#39;</span><span class="p">,</span> <span class="s1">&#39;updated_at&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="c1"># 取值</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">_get_value</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">value</span><span class="o">[</span><span class="nb">name</span><span class="o">].</span><span class="n">nil?</span>
</span><span class='line'>        <span class="c1"># _target_class为使用has_settings的model</span>
</span><span class='line'>        <span class="n">_target_class</span><span class="o">.</span><span class="n">default_settings</span><span class="o">[</span><span class="n">var</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="nb">name</span><span class="o">]</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="c1"># 直接从数据库取</span>
</span><span class='line'>        <span class="n">value</span><span class="o">[</span><span class="nb">name</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 设置值</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">_set_value</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">value</span><span class="o">[</span><span class="nb">name</span><span class="o">]</span> <span class="o">!=</span> <span class="n">v</span>
</span><span class='line'>        <span class="n">value_will_change!</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># 如果value是nil就把值删除掉</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">v</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>          <span class="n">value</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="c1"># 设置值</span>
</span><span class='line'>          <span class="n">value</span><span class="o">[</span><span class="nb">name</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">_target_class</span>
</span><span class='line'>      <span class="n">target_type</span><span class="o">.</span><span class="n">constantize</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Patch ActiveRecord to save serialized attributes only if they are changed</span>
</span><span class='line'>    <span class="k">if</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:VERSION</span><span class="o">::</span><span class="no">MAJOR</span> <span class="o">&lt;</span> <span class="mi">4</span>
</span><span class='line'>      <span class="c1"># https://github.com/rails/rails/blob/3-2-stable/activerecord/lib/active_record/attribute_methods/dirty.rb#L70</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="o">*</span><span class="p">)</span>
</span><span class='line'>        <span class="k">super</span><span class="p">(</span><span class="n">changed</span><span class="p">)</span> <span class="k">if</span> <span class="n">changed?</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># https://github.com/rails/rails/blob/4-0-stable/activerecord/lib/active_record/attribute_methods/dirty.rb#L73</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">update_record</span><span class="p">(</span><span class="o">*</span><span class="p">)</span>
</span><span class='line'>        <span class="k">super</span><span class="p">(</span><span class="n">keys_for_partial_write</span><span class="p">)</span> <span class="k">if</span> <span class="n">changed?</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个setting_objects主要是用来操作settings表的内容的</p>

<p>attribute_names返回的是一个对象的所有属性名</p>

<p>serialize :value, Hash 把value变成Hash对象来存储</p>

<p>default_settings是有些不明白</p>

<p>我们来看下lib/rails-settings/configuration.rb文件</p>

<h3>6. has_settings的symbol列表</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">has_settings</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="ss">RailsSettings</span><span class="p">:</span><span class="ss">:Configuration</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="o">.</span><span class="n">unshift</span><span class="p">(</span><span class="nb">self</span><span class="p">),</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">include</span> <span class="ss">RailsSettings</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="kp">extend</span> <span class="ss">RailsSettings</span><span class="p">:</span><span class="ss">:Scopes</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">RailsSettings</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Configuration</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># 如果最后一个参数是hash就弹出来</span>
</span><span class='line'>      <span class="n">options</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">extract_options!</span>
</span><span class='line'>      <span class="c1"># 把第一个参数弹出来</span>
</span><span class='line'>      <span class="n">klass</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>      <span class="c1"># 剩下的给keys</span>
</span><span class='line'>      <span class="n">keys</span> <span class="o">=</span> <span class="n">args</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">raise</span> <span class="no">ArgumentError</span> <span class="k">unless</span> <span class="n">klass</span>
</span><span class='line'>
</span><span class='line'>      <span class="vi">@klass</span><span class="err">其实就是</span><span class="no">User</span><span class="err">这个</span><span class="n">model</span><span class="err">类</span>
</span><span class='line'>      <span class="vi">@klass</span> <span class="o">=</span> <span class="n">klass</span>
</span><span class='line'>      <span class="vi">@klass</span><span class="o">.</span><span class="n">class_attribute</span> <span class="ss">:default_settings</span><span class="p">,</span> <span class="ss">:setting_object_class_name</span>
</span><span class='line'>      <span class="c1"># 默认为空的hash</span>
</span><span class='line'>      <span class="vi">@klass</span><span class="o">.</span><span class="n">default_settings</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>      <span class="c1"># 定义默认的class_name</span>
</span><span class='line'>      <span class="vi">@klass</span><span class="o">.</span><span class="n">setting_object_class_name</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:class_name</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;RailsSettings::SettingObject&#39;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># keys可能会包含:dashboard</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>        <span class="k">yield</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="n">keys</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">k</span><span class="o">|</span>
</span><span class='line'>          <span class="c1"># 可能default_settings的值会变成这样{:dashboard=&gt;{}}</span>
</span><span class='line'>          <span class="n">key</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">raise</span> <span class="no">ArgumentError</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;has_settings: No keys defined&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="vi">@klass</span><span class="o">.</span><span class="n">default_settings</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">key</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>      <span class="c1"># 必须是symbol</span>
</span><span class='line'>      <span class="k">raise</span> <span class="no">ArgumentError</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;has_settings: Symbol expected, but got a </span><span class="si">#{</span><span class="nb">name</span><span class="o">.</span><span class="n">class</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="nb">name</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Symbol</span><span class="p">)</span>
</span><span class='line'>      <span class="k">raise</span> <span class="no">ArgumentError</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;has_settings: Option :defaults expected, but got </span><span class="si">#{</span><span class="n">options</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="n">options</span><span class="o">.</span><span class="n">blank?</span> <span class="o">||</span> <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">keys</span> <span class="o">==</span> <span class="o">[</span><span class="ss">:defaults</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@klass</span><span class="o">.</span><span class="n">default_settings</span><span class="o">[</span><span class="nb">name</span><span class="o">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:defaults</span><span class="o">]</span> <span class="o">||</span> <span class="p">{})</span><span class="o">.</span><span class="n">stringify_keys</span><span class="o">.</span><span class="n">freeze</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">default_settings</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:dashboard</span><span class="o">=&gt;</span><span class="p">{}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>stringify_keys把hash的key转成字符串</p>

<p>has_settings定义的Symbol列表就是放到default_settings中的</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[settingslogic源码分析]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/18/settingslogicyuan-ma-fen-xi/"/>
    <updated>2014-01-18T21:57:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/18/settingslogicyuan-ma-fen-xi</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://github.com/binarylogic/settingslogic">settingslogic</a></li>
<li><a href="http://blog.csdn.net/smilewater/article/details/1679835">Ruby/Rails 中的YAML</a></li>
<li><a href="http://stackoverflow.com/questions/4002092/how-do-i-use-yaml-in-ruby-rails">How do I use YAML in ruby/rails?</a></li>
</ul>


<p>这个gem是用来做配置文件的</p>

<h3>使用</h3>

<h4>1.定义你的class</h4>

<p>在app/models下创建settings.rb文件,内容为:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Settings</span> <span class="o">&lt;</span> <span class="no">Settingslogic</span>
</span><span class='line'>  <span class="n">source</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/config/application.yml&quot;</span>
</span><span class='line'>  <span class="n">namespace</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h4>2.创建你的配置</h4>

<p>在config下创建application.yml文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/application.yml</span>
</span><span class='line'><span class="ss">defaults</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">defaults</span>
</span><span class='line'>  <span class="ss">cool</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">saweet</span><span class="p">:</span> <span class="n">nested</span> <span class="n">settings</span>
</span><span class='line'>  <span class="n">neat_setting</span><span class="p">:</span> <span class="mi">24</span>
</span><span class='line'>  <span class="n">awesome_setting</span><span class="p">:</span> <span class="o">&lt;</span><span class="sx">%= &quot;Did you know 5 + 5 =</span> <span class="c1">#{5 + 5}?&quot; %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">defaults</span>
</span><span class='line'>  <span class="n">neat_setting</span><span class="p">:</span> <span class="mi">800</span>
</span><span class='line'>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">defaults</span>
</span><span class='line'>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">defaults</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3.访问你的配置</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;development&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Settings</span><span class="o">.</span><span class="n">cool</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;#&lt;Settingslogic::Settings ... &gt;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Settings</span><span class="o">.</span><span class="n">cool</span><span class="o">.</span><span class="n">saweet</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;nested settings&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Settings</span><span class="o">.</span><span class="n">neat_setting</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="mi">800</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Settings</span><span class="o">.</span><span class="n">awesome_setting</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Did you know 5 + 5 = 10?&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>分析</h3>

<p>源码中只有一个文件叫settingslogic.rb</p>

<p>我们从app/models/settings.rb文件入手</p>

<figure class='code'><figcaption><span>app/models/settings.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Settings</span> <span class="o">&lt;</span> <span class="no">Settingslogic</span>
</span><span class='line'>  <span class="n">source</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/config/application.yml&quot;</span>
</span><span class='line'>  <span class="n">namespace</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>首先Settings继承自Settingslogic,而且用了两个方法source和namespace</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Settingslogic</span> <span class="o">&lt;</span> <span class="no">Hash</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Settingslogic是个hash</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">source</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@source</span> <span class="o">||=</span> <span class="n">value</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">namespace</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@namespace</span> <span class="o">||=</span> <span class="n">value</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>source和namespace不过是把值存到变量中去</p>

<p>先来了解Settingslogic类的结构</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Settingslogic</span> <span class="o">&lt;</span> <span class="no">Hash</span>
</span><span class='line'>  <span class="c1"># 定义了一个标准错误类</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">MissingSetting</span> <span class="o">&lt;</span> <span class="no">StandardError</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 下面都是类方法</span>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">name</span> <span class="c1"># :nodoc:</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">superclass</span> <span class="o">!=</span> <span class="no">Hash</span> <span class="o">&amp;&amp;</span> <span class="n">instance</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span> <span class="p">?</span> <span class="n">instance</span><span class="o">.</span><span class="n">name</span> <span class="p">:</span> <span class="k">super</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 除了用send,不能直接调用private里的私有类方法</span>
</span><span class='line'>    <span class="c1"># 当调用上面的类方法时会调用私有类方法</span>
</span><span class='line'>    <span class="c1"># 例如可以这样Settings.send(:instance)</span>
</span><span class='line'>    <span class="kp">private</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">instance</span>
</span><span class='line'>        <span class="k">return</span> <span class="vi">@instance</span> <span class="k">if</span> <span class="vi">@instance</span>
</span><span class='line'>        <span class="vi">@instance</span> <span class="o">=</span> <span class="kp">new</span>
</span><span class='line'>        <span class="n">create_accessors!</span>
</span><span class='line'>        <span class="vi">@instance</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="n">instance</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 这之后定义的都是实例方法,也就是说Settingslogic.new之后调用的</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">hash_or_file</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">source</span><span class="p">,</span> <span class="n">section</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们先来了解initialize方法,initialize方法会利用source和namespace的值</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 第一个参数是yml配置文件的路径</span>
</span><span class='line'><span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">hash_or_file</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">source</span><span class="p">,</span> <span class="n">section</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">#puts &quot;new! #{hash_or_file}&quot;</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">hash_or_file</span>
</span><span class='line'>  <span class="c1"># 没有指定就报错</span>
</span><span class='line'>  <span class="k">when</span> <span class="kp">nil</span>
</span><span class='line'>    <span class="k">raise</span> <span class="ss">Errno</span><span class="p">:</span><span class="ss">:ENOENT</span><span class="p">,</span> <span class="s2">&quot;No file specified as Settingslogic source&quot;</span>
</span><span class='line'>  <span class="c1"># 如果是一个Hash的话就被代替</span>
</span><span class='line'>  <span class="k">when</span> <span class="no">Hash</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">replace</span> <span class="n">hash_or_file</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="c1"># 读这个文件的内容</span>
</span><span class='line'>    <span class="n">file_contents</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">hash_or_file</span><span class="p">)</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'>    <span class="c1"># 如果内容为空就是一个空的hash,否则的话用YAML把它的结果转成hash</span>
</span><span class='line'>    <span class="nb">hash</span> <span class="o">=</span> <span class="n">file_contents</span><span class="o">.</span><span class="n">empty?</span> <span class="p">?</span> <span class="p">{}</span> <span class="p">:</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="no">ERB</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">file_contents</span><span class="p">)</span><span class="o">.</span><span class="n">result</span><span class="p">)</span><span class="o">.</span><span class="n">to_hash</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">namespace</span>
</span><span class='line'>      <span class="c1"># 只取出相应namespace</span>
</span><span class='line'>      <span class="nb">hash</span> <span class="o">=</span> <span class="nb">hash</span><span class="o">[</span><span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">namespace</span><span class="o">]</span> <span class="ow">or</span> <span class="k">return</span> <span class="n">missing_key</span><span class="p">(</span><span class="s2">&quot;Missing setting &#39;</span><span class="si">#{</span><span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">namespace</span><span class="si">}</span><span class="s2">&#39; in </span><span class="si">#{</span><span class="n">hash_or_file</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">replace</span> <span class="nb">hash</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># section是看value是不是hash</span>
</span><span class='line'>  <span class="vi">@section</span> <span class="o">=</span> <span class="n">section</span> <span class="o">||</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">source</span>  <span class="c1"># so end of error says &quot;in application.yml&quot;</span>
</span><span class='line'>  <span class="n">create_accessors!</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 创建实例方法</span>
</span><span class='line'><span class="k">def</span> <span class="nf">create_accessors!</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span><span class="n">val</span><span class="o">|</span>
</span><span class='line'>    <span class="n">create_accessor_for</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 以key定义实例方法</span>
</span><span class='line'><span class="k">def</span> <span class="nf">create_accessor_for</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">val</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 如果不是以字母开头就退出</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">unless</span> <span class="n">key</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="sr">/^\w+$/</span>  <span class="c1"># could have &quot;some-setting:&quot; which blows up eval</span>
</span><span class='line'>  <span class="c1"># 设置实例变量的值,默认为nil</span>
</span><span class='line'>  <span class="nb">instance_variable_set</span><span class="p">(</span><span class="s2">&quot;@</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">val</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">class_eval</span> <span class="o">&lt;&lt;-</span><span class="no">EndEval</span>
</span><span class='line'><span class="sh">    def #{key}</span>
</span><span class='line'><span class="sh">      # 如果已经存在就返回</span>
</span><span class='line'><span class="sh">      return @#{key} if @#{key}</span>
</span><span class='line'><span class="sh">      # 没有key就报错</span>
</span><span class='line'><span class="sh">      return missing_key(&quot;Missing setting &#39;#{key}&#39; in #{@section}&quot;) unless has_key? &#39;#{key}&#39;</span>
</span><span class='line'><span class="sh">      value = fetch(&#39;#{key}&#39;)</span>
</span><span class='line'><span class="sh">      # 如果是一个hash,那就去初始化</span>
</span><span class='line'><span class="sh">      @#{key} = if value.is_a?(Hash)</span>
</span><span class='line'><span class="sh">        self.class.new(value, &quot;&#39;#{key}&#39; section in #{@section}&quot;)</span>
</span><span class='line'><span class="sh">      # 遍历</span>
</span><span class='line'><span class="sh">      elsif value.is_a?(Array) &amp;&amp; value.all?{|v| v.is_a? Hash}</span>
</span><span class='line'><span class="sh">        value.map{|v| self.class.new(v)}</span>
</span><span class='line'><span class="sh">      # 直接返回</span>
</span><span class='line'><span class="sh">      else</span>
</span><span class='line'><span class="sh">        value</span>
</span><span class='line'><span class="sh">      end</span>
</span><span class='line'><span class="sh">    end</span>
</span><span class='line'><span class="no">  EndEval</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在这一步，从yml文件中读取内容转化成hash,然后定义了类似cool,neat_setting这样的实例方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Settings</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">cool</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="s2">&quot;saweet&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;nested settings&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">Settings</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">instance_variables</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:@section</span><span class="p">,</span> <span class="ss">:@cool</span><span class="p">,</span> <span class="ss">:@neat_setting</span><span class="p">,</span> <span class="ss">:@awesome_setting</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="no">Settings</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">cool</span><span class="o">.</span><span class="n">instance_variables</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:@section</span><span class="p">,</span> <span class="ss">:@saweet</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="no">Settings</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">cool</span><span class="o">.</span><span class="n">instance_variable_get</span><span class="p">(</span><span class="ss">:@section</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;&#39;cool&#39; section in /home/yinsigan/g/config/application.yml&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>继承来看其他的实例方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">[]</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>  <span class="n">fetch</span><span class="p">(</span><span class="n">key</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">[]=</span><span class="p">(</span><span class="n">key</span><span class="p">,</span><span class="n">val</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># Setting[:key][:key2] = &#39;value&#39; for dynamic settings</span>
</span><span class='line'>  <span class="n">val</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">val</span><span class="p">,</span> <span class="vi">@section</span><span class="p">)</span> <span class="k">if</span> <span class="n">val</span><span class="o">.</span><span class="n">is_a?</span> <span class="no">Hash</span>
</span><span class='line'>  <span class="c1"># 设置它的值</span>
</span><span class='line'>  <span class="n">store</span><span class="p">(</span><span class="n">key</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="n">val</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 创建实例方法</span>
</span><span class='line'>  <span class="n">create_accessor_for</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">val</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 没有设置值之前</span>
</span><span class='line'><span class="n">s</span><span class="o">[</span><span class="s1">&#39;name&#39;</span><span class="o">]</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span><span class="o">[</span><span class="s1">&#39;name&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;xiaozi&#39;</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;xiaozi&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;xiaozi&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">instance_variables</span><span class="p">()</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:@section</span><span class="p">,</span> <span class="ss">:@cool</span><span class="p">,</span> <span class="ss">:@neat_setting</span><span class="p">,</span> <span class="ss">:@awesome_setting</span><span class="p">,</span> <span class="ss">:@name</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果执行Settings.cool,会先去执行类方法中的method_missing</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">private</span>
</span><span class='line'>  <span class="c1"># 这个方法执行之前会执行instance</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 因为instance是new出来的,所以这个时候会去执行实例方法中的method_missing</span>
</span><span class='line'>    <span class="n">instance</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">instance</span>
</span><span class='line'>    <span class="c1"># 如果有@instance这个变量返回就可以</span>
</span><span class='line'>    <span class="k">return</span> <span class="vi">@instance</span> <span class="k">if</span> <span class="vi">@instance</span>
</span><span class='line'>    <span class="c1"># 生成一个新hash</span>
</span><span class='line'>    <span class="vi">@instance</span> <span class="o">=</span> <span class="kp">new</span>
</span><span class='line'>    <span class="c1"># 创建类方法</span>
</span><span class='line'>    <span class="n">create_accessors!</span>
</span><span class='line'>    <span class="vi">@instance</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 通过遍历定义新的类方法</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create_accessors!</span>
</span><span class='line'>    <span class="n">instance</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span><span class="n">val</span><span class="o">|</span>
</span><span class='line'>      <span class="n">create_accessor_for</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create_accessor_for</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 如果不是以字母开头就退出</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">unless</span> <span class="n">key</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="sr">/^\w+$/</span>  <span class="c1"># could have &quot;some-setting:&quot; which blows up eval</span>
</span><span class='line'>    <span class="c1"># 定义一个类方法</span>
</span><span class='line'>    <span class="nb">instance_eval</span> <span class="s2">&quot;def </span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2">; instance.send(:</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2">); end&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>当你首次执行Settings.cool,就会去创建Settings类的实例,也就是@instance,会执行Settings中的方法,也就是@instance中有很多实例方法,以后执行Settings.neat_setting等方法就会去读取@instance</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Settings</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:instance</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="s2">&quot;cool&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;saweet&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;nested settings&quot;</span><span class="p">},</span>
</span><span class='line'> <span class="s2">&quot;neat_setting&quot;</span><span class="o">=&gt;</span><span class="mi">800</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;awesome_setting&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Did you know 5 + 5 = 10?&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">Settings</span><span class="o">.</span><span class="n">instance_variable_get</span><span class="p">(</span><span class="ss">:@instance</span><span class="p">)</span><span class="o">.</span><span class="n">instance_variables</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:@section</span><span class="p">,</span> <span class="ss">:@cool</span><span class="p">,</span> <span class="ss">:@neat_setting</span><span class="p">,</span> <span class="ss">:@awesome_setting</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>suppress_errors Rails.env.production?这个方法可以控制不报错</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">suppress_errors</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@suppress_errors</span> <span class="o">||=</span> <span class="n">value</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">missing_key</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="kp">nil</span> <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">suppress_errors</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">raise</span> <span class="no">MissingSetting</span><span class="p">,</span> <span class="n">msg</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>其他的方法可以自己分析</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">name</span> <span class="c1"># :nodoc:</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">superclass</span> <span class="o">!=</span> <span class="no">Hash</span> <span class="o">&amp;&amp;</span> <span class="n">instance</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span> <span class="p">?</span> <span class="n">instance</span><span class="o">.</span><span class="n">name</span> <span class="p">:</span> <span class="k">super</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Enables Settings.get(&#39;nested.key.name&#39;) for dynamic access</span>
</span><span class='line'><span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>  <span class="n">parts</span> <span class="o">=</span> <span class="n">key</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">curs</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>  <span class="k">while</span> <span class="nb">p</span> <span class="o">=</span> <span class="n">parts</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>    <span class="n">curs</span> <span class="o">=</span> <span class="n">curs</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">curs</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">symbolize_keys</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">inject</span><span class="p">({})</span> <span class="k">do</span> <span class="o">|</span><span class="n">memo</span><span class="p">,</span> <span class="n">tuple</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">k</span> <span class="o">=</span> <span class="p">(</span><span class="n">tuple</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">to_sym</span> <span class="k">rescue</span> <span class="n">tuple</span><span class="o">.</span><span class="n">first</span><span class="p">)</span> <span class="o">||</span> <span class="n">tuple</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">v</span> <span class="o">=</span> <span class="n">k</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Symbol</span><span class="p">)</span> <span class="p">?</span> <span class="nb">send</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="p">:</span> <span class="n">tuple</span><span class="o">.</span><span class="n">last</span> <span class="c1"># make sure the value is accessed the same way Settings.foo.bar works</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">memo</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span> <span class="o">&amp;&amp;</span> <span class="n">v</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:symbolize_keys</span><span class="p">)</span> <span class="p">?</span> <span class="n">v</span><span class="o">.</span><span class="n">symbolize_keys</span> <span class="p">:</span> <span class="n">v</span> <span class="c1">#recurse for nested hashes</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">memo</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tabs_on_rails源码分析]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/18/tabs-on-railsyuan-ma-fen-xi/"/>
    <updated>2014-01-18T14:38:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/18/tabs-on-railsyuan-ma-fen-xi</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://github.com/weppos/tabs_on_rails">tabs_on_rails</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/17/breadcrumbs-on-railsyuan-ma-fen-xi/">breadcrumbs_on_rails源码分析</a></li>
</ul>


<p>这个gem是用来生成tab用的,由于这个gem的源码结构的实现方法跟breadcrumbs_on_rails的有些相似,大家可以看下<a href="http://yinsigan.github.io/blog/2014/01/17/breadcrumbs-on-railsyuan-ma-fen-xi/">breadcrumbs_on_rails源码分析</a>这篇blog</p>

<p>是这样来使用的</p>

<!-- more -->




<figure class='code'><figcaption><span>home/index.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= tabs_tag do |tab| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">tab</span><span class="o">.</span><span class="n">say_hello</span> <span class="s1">&#39;say_hello&#39;</span><span class="p">,</span> <span class="n">root_path</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= tab.home_index &#39;home_index&#39;, home_index_path %&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= tab.home_hello &#39;home_hello&#39;, home_hello_path %&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;p&gt;The name of current tab is &lt;%=</span> <span class="n">current_tab</span> <span class="sx">%&gt;.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;%=</span> <span class="vi">@a</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>home_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HomeController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">set_tab</span> <span class="ss">:home_index</span>
</span><span class='line'>    <span class="vi">@a</span> <span class="o">=</span> <span class="n">current_tab?</span><span class="p">(</span><span class="ss">:home_index</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>显示结果是这样的</p>

<p><img src="http://yinsigan.github.io/images/tabs_on_rails/result.png"></p>

<p>tabs_tag中定义了三个tab, 分别为say_hello, home_index, home_hello，如果要设置当前tab必须在控制器里设置</p>

<p>源码结构</p>

<figure class='code'><figcaption><span>home_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">lib</span>
</span><span class='line'><span class="err">├──</span> <span class="n">tabs_on_rails</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">action_controller</span><span class="o">.</span><span class="n">rb</span>  <span class="c1"># 定义了controller可以使用的set_tab等方法</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">railtie</span><span class="o">.</span><span class="n">rb</span> <span class="c1"># 启动文件</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">tabs</span>
</span><span class='line'><span class="err">│  </span> <span class="err">│  </span> <span class="err">├──</span> <span class="n">builder</span><span class="o">.</span><span class="n">rb</span>  <span class="c1"># 生成视图用的</span>
</span><span class='line'><span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="n">tabs_builder</span><span class="o">.</span><span class="n">rb</span> <span class="c1"># 继承了builder.rb文件</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">tabs</span><span class="o">.</span><span class="n">rb</span> <span class="c1"># 生成视图用的主要文件</span>
</span><span class='line'><span class="err">│  </span> <span class="err">└──</span> <span class="n">version</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">└──</span> <span class="n">tabs_on_rails</span><span class="o">.</span><span class="n">rb</span> <span class="c1"># 主程序文件，包含一些require语句</span>
</span></code></pre></td></tr></table></div></figure>


<p>先来分析set_tab这个方法,这个方法是属于controller的，这个方法是定义在action_controller.rb这个文件中的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">protected</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">set_tab</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">namespace</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># tab_stack是专门放tab用的</span>
</span><span class='line'>  <span class="c1"># 可以不传namespace(命名空间),默认为:default</span>
</span><span class='line'>  <span class="n">tab_stack</span><span class="o">[</span><span class="n">namespace</span> <span class="o">||</span> <span class="ss">:default</span><span class="o">]</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">set_tab</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># extract_options!的意思是看*args最后一个是不是hash，如果是的话就弹(pop)出来</span>
</span><span class='line'>    <span class="n">options</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">extract_options!</span>
</span><span class='line'>    <span class="c1"># 把剩下的参数给name, namespace</span>
</span><span class='line'>    <span class="nb">name</span><span class="p">,</span> <span class="n">namespace</span> <span class="o">=</span> <span class="n">args</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 添加了一个before_filter过滤,执行的还是protected中的set_tab方法</span>
</span><span class='line'>    <span class="n">before_filter</span><span class="p">(</span><span class="n">options</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">controller</span><span class="o">|</span>
</span><span class='line'>      <span class="n">controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:set_tab</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">namespace</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>有两个set_tab的方法,一个是受保护的(protected),一个是类方法,也就是说一个在controller这个类中就可以执行，一个要在controller中的方法里执行。</p>

<p>由代码可知两个set_tab方法最终都是执行protected中的set_tab方法</p>

<p>在来看跟set_tab也是protected的方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">protected</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 返回当前的tab</span>
</span><span class='line'><span class="k">def</span> <span class="nf">current_tab</span><span class="p">(</span><span class="n">namespace</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tab_stack</span><span class="o">[</span><span class="n">namespace</span> <span class="o">||</span> <span class="ss">:default</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 判断是否是当前的tab</span>
</span><span class='line'><span class="k">def</span> <span class="nf">current_tab?</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">namespace</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="n">current_tab</span><span class="p">(</span><span class="n">namespace</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span> <span class="o">==</span> <span class="nb">name</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># @tab_stack是一个hash，key默认为:default(命名空间namespace)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">tab_stack</span>
</span><span class='line'>  <span class="vi">@tab_stack</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们来试验下tab_stack这个protected方法的效果</p>

<figure class='code'><figcaption><span>home_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HomeController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">set_tab</span> <span class="ss">:home_index</span>
</span><span class='line'>    <span class="vi">@a</span> <span class="o">=</span> <span class="n">current_tab?</span><span class="p">(</span><span class="ss">:home_index</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@b</span> <span class="o">=</span> <span class="n">tab_stack</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">The</span> <span class="nb">name</span> <span class="n">of</span> <span class="n">current</span> <span class="n">tab</span> <span class="n">is</span> <span class="o">&lt;</span><span class="sx">%= current_tab %&gt;.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="vi">@a</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= @b %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>将会输出</p>

<p><img src="http://yinsigan.github.io/images/tabs_on_rails/tab_stack.png"></p>

<p>而在这几个方法中只有current_tab, current_tab?是helper方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">included</span> <span class="k">do</span>
</span><span class='line'>  <span class="kp">extend</span>        <span class="no">ClassMethods</span>
</span><span class='line'>  <span class="n">helper</span>        <span class="no">HelperMethods</span>
</span><span class='line'>  <span class="n">helper_method</span> <span class="ss">:current_tab</span><span class="p">,</span> <span class="ss">:current_tab?</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>也就是说current_tab, current_tab?可以在view文件中直接使用</p>

<p>HelperMethods模组里定义了tabs_tag方法,这个方法是生成tab用的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tabs_tag</span><span class="p">(</span><span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Tabs</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="p">{</span> <span class="ss">:namespace</span> <span class="o">=&gt;</span> <span class="ss">:default</span> <span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">options</span><span class="p">))</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>找到Tabs类,它定义在tabs.rb文件中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;tabs_on_rails/tabs/builder&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;tabs_on_rails/tabs/tabs_builder&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>先来看头两行，导入了两个模组,这两个模组是有继承关系的，来看下。</p>

<figure class='code'><figcaption><span>lib/tabs/builder.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">TabsOnRails</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Tabs</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Builder</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 初始化</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="c1"># 视图上下文</span>
</span><span class='line'>        <span class="vi">@context</span>   <span class="o">=</span> <span class="n">context</span>
</span><span class='line'>        <span class="c1"># 命名空间</span>
</span><span class='line'>        <span class="vi">@namespace</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:namespace</span><span class="p">)</span> <span class="o">||</span> <span class="ss">:default</span>
</span><span class='line'>        <span class="c1"># 其他选项</span>
</span><span class='line'>        <span class="vi">@options</span>   <span class="o">=</span> <span class="n">options</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 判断是否是当前tab</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">current_tab?</span><span class="p">(</span><span class="n">tab</span><span class="p">)</span>
</span><span class='line'>        <span class="n">tab</span><span class="o">.</span><span class="n">to_s</span> <span class="o">==</span> <span class="vi">@context</span><span class="o">.</span><span class="n">current_tab</span><span class="p">(</span><span class="vi">@namespace</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 等子类实现的方法</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">tab_for</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>        <span class="k">raise</span> <span class="no">NotImplementedError</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 等子类实现的方法</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">open_tabs</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 等子类实现的方法</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">close_tabs</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Builder定义了几个方法,大部分(tab_for, open_tabs, close_tabs)都是空的,等待子类来实现。</p>

<p>lib/tabs/tabs_builder.rb中定义的TabsBuilder就是来实现Builder的。</p>

<figure class='code'><figcaption><span>lib/tabs/tabs_builder.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">TabsOnRails</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Tabs</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">class</span> <span class="nc">TabsBuilder</span> <span class="o">&lt;</span> <span class="no">Builder</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 生成带tab的html就是这个方法,会生成带a标签或span标签(当前tab)</span>
</span><span class='line'>      <span class="c1"># tab是标签的名字,对应controller里的</span>
</span><span class='line'>      <span class="c1"># name是a标签的内容, url_options是a标签的路径, item_options是其他选项,例如class等</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">tab_for</span><span class="p">(</span><span class="n">tab</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">url_options</span><span class="p">,</span> <span class="n">item_options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="c1"># current_tab?这个方法在Builder实现的</span>
</span><span class='line'>        <span class="c1"># 如果是当前tab,把class属性的值以空格分隔成数组,再加上一个&quot;current&quot;属性，再组成class</span>
</span><span class='line'>        <span class="n">item_options</span><span class="o">[</span><span class="ss">:class</span><span class="o">]</span> <span class="o">=</span> <span class="n">item_options</span><span class="o">[</span><span class="ss">:class</span><span class="o">].</span><span class="n">to_s</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="vi">@options</span><span class="o">[</span><span class="ss">:active_class</span><span class="o">]</span> <span class="o">||</span> <span class="s2">&quot;current&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">current_tab?</span><span class="p">(</span><span class="n">tab</span><span class="p">)</span>
</span><span class='line'>        <span class="c1"># 如果不是当前tab就用a标签,如果是就用span标签</span>
</span><span class='line'>        <span class="n">content</span> <span class="o">=</span> <span class="vi">@context</span><span class="o">.</span><span class="n">link_to_unless</span><span class="p">(</span><span class="n">current_tab?</span><span class="p">(</span><span class="n">tab</span><span class="p">),</span> <span class="nb">name</span><span class="p">,</span> <span class="n">url_options</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>          <span class="vi">@context</span><span class="o">.</span><span class="n">content_tag</span><span class="p">(</span><span class="ss">:span</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="c1"># 把a标签的内容放在li里</span>
</span><span class='line'>        <span class="vi">@context</span><span class="o">.</span><span class="n">content_tag</span><span class="p">(</span><span class="ss">:li</span><span class="p">,</span> <span class="n">content</span><span class="p">,</span> <span class="n">item_options</span><span class="p">)</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 外面包一层ul</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">open_tabs</span><span class="p">(</span><span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="c1"># 产生一个空的ul标签</span>
</span><span class='line'>        <span class="vi">@context</span><span class="o">.</span><span class="n">tag</span><span class="p">(</span><span class="s2">&quot;ul&quot;</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="nb">open</span> <span class="o">=</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">close_tabs</span><span class="p">(</span><span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>        <span class="s2">&quot;&lt;/ul&gt;&quot;</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>content_tag就是生成html用的,第一个参数是标签的名称(li, span, a),第二个参数是内容</p>

<p>看来生成tag的工作主要在TabsBuilder这个模组上了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= tabs_tag do |tab| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">tab</span><span class="o">.</span><span class="n">say_hello</span> <span class="s1">&#39;say_hello&#39;</span><span class="p">,</span> <span class="n">root_path</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= tab.home_index &#39;home_index&#39;, home_index_path %&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= tab.home_hello &#39;home_hello&#39;, home_hello_path %&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">def tabs_tag(options =</span> <span class="p">{},</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 传默认的namespace为:default</span>
</span><span class='line'>  <span class="no">Tabs</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="p">{</span> <span class="ss">:namespace</span> <span class="o">=&gt;</span> <span class="ss">:default</span> <span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">options</span><span class="p">))</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>来看下tabs.rb这个文件的内容</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">TabsOnRails</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Tabs</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 指定默认的default_builder,也就是上面讲到的TabsBuilder</span>
</span><span class='line'>    <span class="n">mattr_accessor</span> <span class="ss">:default_builder</span>
</span><span class='line'>    <span class="vc">@@default_builder</span> <span class="o">=</span> <span class="no">TabsBuilder</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 初始化</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>      <span class="c1"># 视图上下文</span>
</span><span class='line'>      <span class="vi">@context</span> <span class="o">=</span> <span class="n">context</span>
</span><span class='line'>      <span class="c1"># 如果没有指定builder,就用默认的builder</span>
</span><span class='line'>      <span class="c1"># 主要传给builder一个视图上下文就ok，builder会去绘制a或span标签的</span>
</span><span class='line'>      <span class="vi">@builder</span> <span class="o">=</span> <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:builder</span><span class="p">)</span> <span class="o">||</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">default_builder</span><span class="p">)</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@context</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@options</span> <span class="o">=</span> <span class="n">options</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># arity是看有没有固定参数http://www.ruby-doc.org/core-2.1.0/Method.html</span>
</span><span class='line'>    <span class="sx">%w(open_tabs close_tabs)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="o">|</span>
</span><span class='line'>      <span class="c1"># 定义open_tabs和close_tabs方法</span>
</span><span class='line'>      <span class="n">define_method</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span> <span class="k">do</span> <span class="o">|*</span><span class="n">args</span><span class="o">|</span>                      <span class="c1"># def open_tabs(*args)</span>
</span><span class='line'>        <span class="c1"># 取builder中的open_tabs和close_tabs方法</span>
</span><span class='line'>        <span class="nb">method</span> <span class="o">=</span> <span class="vi">@builder</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>                    <span class="c1">#   method = @builder.method(:open_tabs)</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">method</span><span class="o">.</span><span class="n">arity</span><span class="o">.</span><span class="n">zero?</span>                             <span class="c1">#   if method.arity.zero?</span>
</span><span class='line'>          <span class="nb">method</span><span class="o">.</span><span class="n">call</span>                                     <span class="c1">#     method.call</span>
</span><span class='line'>        <span class="k">else</span>                                              <span class="c1">#   else</span>
</span><span class='line'>          <span class="nb">method</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>                              <span class="c1">#     method.call(*args)</span>
</span><span class='line'>        <span class="k">end</span>                                               <span class="c1">#   end</span>
</span><span class='line'>      <span class="k">end</span>                                                 <span class="c1"># end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 当传tab.home_index就会执行这个方法,绘制a标签或span标签</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@builder</span><span class="o">.</span><span class="n">tab_for</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># 如果没有传block就报异常</span>
</span><span class='line'>      <span class="k">raise</span> <span class="no">LocalJumpError</span><span class="p">,</span> <span class="s2">&quot;no block given&quot;</span> <span class="k">unless</span> <span class="nb">block_given?</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 把@options.dup复制一份</span>
</span><span class='line'>      <span class="n">options</span> <span class="o">=</span> <span class="vi">@options</span><span class="o">.</span><span class="n">dup</span>
</span><span class='line'>      <span class="c1"># 没有这两个open_tabs和close_tabs参数就为空</span>
</span><span class='line'>      <span class="n">open_tabs_options</span>  <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:open_tabs</span><span class="p">)</span>  <span class="o">||</span> <span class="p">{}</span>
</span><span class='line'>      <span class="n">close_tabs_options</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:close_tabs</span><span class="p">)</span> <span class="o">||</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 输出html</span>
</span><span class='line'>      <span class="s2">&quot;&quot;</span><span class="o">.</span><span class="n">tap</span> <span class="k">do</span> <span class="o">|</span><span class="n">html</span><span class="o">|</span>
</span><span class='line'>        <span class="n">html</span> <span class="o">&lt;&lt;</span> <span class="n">open_tabs</span><span class="p">(</span><span class="n">open_tabs_options</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>        <span class="c1"># capture的用法见这里http://api.rubyonrails.org/classes/ActionView/Helpers/CaptureHelper.html#method-i-capture</span>
</span><span class='line'>        <span class="n">html</span> <span class="o">&lt;&lt;</span> <span class="vi">@context</span><span class="o">.</span><span class="n">capture</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="n">html</span> <span class="o">&lt;&lt;</span> <span class="n">close_tabs</span><span class="p">(</span><span class="n">close_tabs_options</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>      <span class="k">end</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[breadcrumbs_on_rails源码分析]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/17/breadcrumbs-on-railsyuan-ma-fen-xi/"/>
    <updated>2014-01-17T09:28:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/17/breadcrumbs-on-railsyuan-ma-fen-xi</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://github.com/weppos/breadcrumbs_on_rails">breadcrumbs_on_rails</a></li>
</ul>


<p>这个gem是用来生成面包屑的</p>

<p>是这样来使用的</p>

<figure class='code'><figcaption><span>config/routes.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">G</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s2">&quot;say/hello&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s2">&quot;home/index&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s2">&quot;home/hello&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">root</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s2">&quot;say#hello&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># say_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">SayController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">add_breadcrumb</span> <span class="s2">&quot;root_path&quot;</span><span class="p">,</span> <span class="ss">:root_path</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>    <span class="n">add_breadcrumb</span> <span class="s2">&quot;home_hello_path&quot;</span><span class="p">,</span> <span class="n">home_hello_path</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># home_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">HomeController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">add_breadcrumb</span> <span class="s2">&quot;root_path&quot;</span><span class="p">,</span> <span class="ss">:root_path</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">add_breadcrumb</span> <span class="s2">&quot;home_hello&quot;</span><span class="p">,</span> <span class="ss">:home_hello_path</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>    <span class="n">add_breadcrumb</span> <span class="s2">&quot;home_index&quot;</span><span class="p">,</span> <span class="ss">:home_index_path</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>app/views/home/index.html.erb app/views/home/hello.html.erb app/views/say/hello.html.erb三个文件都添加这一行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= render_breadcrumbs :separator =</span><span class="o">&gt;</span> <span class="s1">&#39; / &#39;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果是这样的</p>

<p><img src="http://yinsigan.github.io/images/bor/root_path.png"></p>

<p><img src="http://yinsigan.github.io/images/bor/home_index_path.png"></p>

<p><img src="http://yinsigan.github.io/images/bor/home_hello_path.png"></p>

<p>源码文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">lib</span>
</span><span class='line'><span class="err">├──</span> <span class="n">breadcrumbs_on_rails</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">action_controller</span><span class="o">.</span><span class="n">rb</span>  <span class="err">定义</span><span class="n">add_breadcrumb</span><span class="p">,</span> <span class="n">render_breadcrumbs</span><span class="err">方法</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">breadcrumbs</span><span class="o">.</span><span class="n">rb</span>  <span class="err">渲染视图</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">railtie</span><span class="o">.</span><span class="n">rb</span> <span class="err">加载</span><span class="n">controller</span><span class="err">时导入</span><span class="n">action_controller</span><span class="err">这个文件的内容</span>
</span><span class='line'><span class="err">│  </span> <span class="err">└──</span> <span class="n">version</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">└──</span> <span class="n">breadcrumbs_on_rails</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>


<p>从breadcrumbs_on_rails的使用中可以知道,定义了add_breadcrumb,和render_breadcrumbs这样的helper方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">helper</span>          <span class="no">HelperMethods</span>
</span><span class='line'><span class="n">helper_method</span>   <span class="ss">:add_breadcrumb</span><span class="p">,</span> <span class="ss">:breadcrumbs</span>
</span></code></pre></td></tr></table></div></figure>


<p>render_breadcrumbs方法正是定义在HelperMethods这个module中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">protected</span>
</span><span class='line'><span class="k">def</span> <span class="nf">add_breadcrumb</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">path</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">breadcrumbs</span> <span class="o">&lt;&lt;</span> <span class="ss">Breadcrumbs</span><span class="p">:</span><span class="ss">:Element</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">breadcrumbs</span>
</span><span class='line'>  <span class="vi">@breadcrumbs</span> <span class="o">||=</span> <span class="o">[]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">add_breadcrumb</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">path</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">filter_options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>    <span class="c1"># This isn&#39;t really nice here</span>
</span><span class='line'>    <span class="c1"># 这个方法先不要管,没有用到第三个参数</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">eval</span> <span class="o">=</span> <span class="no">Utils</span><span class="o">.</span><span class="n">convert_to_set_of_strings</span><span class="p">(</span><span class="n">filter_options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:eval</span><span class="p">),</span> <span class="sx">%w(name path)</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">name</span> <span class="o">=</span> <span class="no">Utils</span><span class="o">.</span><span class="n">instance_proc</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span> <span class="k">if</span> <span class="nb">eval</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">path</span> <span class="o">=</span> <span class="no">Utils</span><span class="o">.</span><span class="n">instance_proc</span><span class="p">(</span><span class="n">path</span><span class="p">)</span> <span class="k">if</span> <span class="nb">eval</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;path&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 重点在这一行,也就是说还是会执行protected中的add_breadcrumb方法</span>
</span><span class='line'>    <span class="n">before_filter</span><span class="p">(</span><span class="n">filter_options</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">controller</span><span class="o">|</span>
</span><span class='line'>      <span class="n">controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:add_breadcrumb</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>有两个add_breadcrumb方法,一个是controller中的类方法,一个是protected的</p>

<p>来看下Breadcrumbs::Element.new(name, path, options)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Element</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:path</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:options</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># name和options分别对应Breadcrumbs的名称和路径</span>
</span><span class='line'>  <span class="c1"># 可以不传path</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">path</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">name</span>     <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">path</span>     <span class="o">=</span> <span class="n">path</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">options</span>  <span class="o">=</span> <span class="n">options</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>也就是说add_breadcrumb主要是是生成一个Element,主要的处理工作在render_breadcrumbs</p>

<p>render_breadcrumbs应该会生成a标签的,来看下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">render_breadcrumbs</span><span class="p">(</span><span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 默认情况下我们没有传:builder这个参数,先不管</span>
</span><span class='line'>  <span class="c1"># 所有新添加的Breadcrumb都会放到breadcrumbs中</span>
</span><span class='line'>  <span class="n">builder</span> <span class="o">=</span> <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:builder</span><span class="p">)</span> <span class="o">||</span> <span class="ss">Breadcrumbs</span><span class="p">:</span><span class="ss">:SimpleBuilder</span><span class="p">)</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="n">breadcrumbs</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>  <span class="n">content</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="n">render</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>  <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="n">capture</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">content</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Builder</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># context 为[ActionView::Base]视图上下文</span>
</span><span class='line'>  <span class="c1"># elements会存add_breadcrumb添加的breadcrumb</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">elements</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>    <span class="vi">@context</span>  <span class="o">=</span> <span class="n">context</span>
</span><span class='line'>    <span class="vi">@elements</span> <span class="o">=</span> <span class="n">elements</span>
</span><span class='line'>    <span class="vi">@options</span>  <span class="o">=</span> <span class="n">options</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 由子类来重载</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">render</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">NotImplementedError</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="kp">protected</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">compute_name</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
</span><span class='line'>      <span class="k">case</span> <span class="nb">name</span> <span class="o">=</span> <span class="n">element</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>      <span class="k">when</span> <span class="no">Symbol</span>
</span><span class='line'>        <span class="vi">@context</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>      <span class="k">when</span> <span class="no">Proc</span>
</span><span class='line'>        <span class="nb">name</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="vi">@context</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="c1"># 如果存的是字符串就原样输出</span>
</span><span class='line'>        <span class="nb">name</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">compute_path</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">path</span> <span class="o">=</span> <span class="n">element</span><span class="o">.</span><span class="n">path</span>
</span><span class='line'>      <span class="k">when</span> <span class="no">Symbol</span>
</span><span class='line'>        <span class="vi">@context</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>      <span class="k">when</span> <span class="no">Proc</span>
</span><span class='line'>        <span class="n">path</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="vi">@context</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="vi">@context</span><span class="o">.</span><span class="n">url_for</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">SimpleBuilder</span> <span class="o">&lt;</span> <span class="no">Builder</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">render</span>
</span><span class='line'>    <span class="vi">@elements</span><span class="o">.</span><span class="n">collect</span> <span class="k">do</span> <span class="o">|</span><span class="n">element</span><span class="o">|</span>
</span><span class='line'>      <span class="n">render_element</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="vi">@options</span><span class="o">[</span><span class="ss">:separator</span><span class="o">]</span> <span class="o">||</span> <span class="s2">&quot; &amp;raquo; &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">render_element</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 如果没存path的情况</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">element</span><span class="o">.</span><span class="n">path</span> <span class="o">==</span> <span class="kp">nil</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=</span> <span class="n">compute_name</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># 关键是这一行生成a标签的</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=</span> <span class="vi">@context</span><span class="o">.</span><span class="n">link_to_unless_current</span><span class="p">(</span><span class="n">compute_name</span><span class="p">(</span><span class="n">element</span><span class="p">),</span> <span class="n">compute_path</span><span class="p">(</span><span class="n">element</span><span class="p">),</span> <span class="n">element</span><span class="o">.</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@options</span><span class="o">[</span><span class="ss">:tag</span><span class="o">]</span>
</span><span class='line'>      <span class="vi">@context</span><span class="o">.</span><span class="n">content_tag</span><span class="p">(</span><span class="vi">@options</span><span class="o">[</span><span class="ss">:tag</span><span class="o">]</span><span class="p">,</span> <span class="n">content</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">content</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>render_breadcrumbs是通过SimpleBuilder的render方法来渲染视图,而SimpleBuilder是继承自Builder的</p>

<p>@context.link_to_unless_current是通过这个来生成标签的</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-messageable源码分析]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/14/acts-as-messageableyuan-ma-fen-xi-1/"/>
    <updated>2014-01-14T11:05:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/14/acts-as-messageableyuan-ma-fen-xi-1</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/LTe/acts-as-messageable">acts-as-messageable</a></p>

<p>这个gem可以实现类似站内消息的机制。</p>

<p>数据库结构:</p>

<p><img src="http://yinsigan.github.io/images/acts-as-messageable/table.png"></p>

<!-- more -->


<p>源码结构:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lib
</span><span class='line'>├── acts-as-messageable
</span><span class='line'>│   ├── message.rb 定义了Message这个model
</span><span class='line'>│   ├── model.rb 主要定义了acts_as_messageable这个方法
</span><span class='line'>│   ├── rails3.rb
</span><span class='line'>│   ├── rails4.rb
</span><span class='line'>│   ├── railtie.rb 加载时用到
</span><span class='line'>│   ├── relation.rb 主要定义了process方法
</span><span class='line'>│   └── scopes.rb 定义了几个scope
</span><span class='line'>├── acts-as-messageable.rb  主程序</span></code></pre></td></tr></table></div></figure>


<h3>acts_as_messageable</h3>

<p>这个方法定义在lib/acts-as-messageable/message.rb中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">acts_as_messageable</span><span class="p">(</span><span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>  <span class="c1"># 定义默认的参数</span>
</span><span class='line'>  <span class="n">default_options</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">:table_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;messages&quot;</span><span class="p">,</span>  <span class="c1"># 表名</span>
</span><span class='line'>    <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsMessageable::Message&quot;</span><span class="p">,</span> <span class="c1"># 类名</span>
</span><span class='line'>    <span class="ss">:required</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:topic</span><span class="p">,</span> <span class="ss">:body</span><span class="o">]</span><span class="p">,</span> <span class="c1"># 必须的参数填写</span>
</span><span class='line'>    <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:nullify</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:group_messages</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">options</span> <span class="o">=</span> <span class="n">default_options</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 两个多态</span>
</span><span class='line'>  <span class="n">has_many</span>  <span class="ss">:received_messages_relation</span><span class="p">,</span>  <span class="c1"># 接收者</span>
</span><span class='line'>            <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:received_messageable</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="n">options</span><span class="o">[</span><span class="ss">:class_name</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="n">options</span><span class="o">[</span><span class="ss">:dependent</span><span class="o">]</span>
</span><span class='line'>  <span class="n">has_many</span>  <span class="ss">:sent_messages_relation</span><span class="p">,</span> <span class="c1"># 发送者</span>
</span><span class='line'>            <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:sent_messageable</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="n">options</span><span class="o">[</span><span class="ss">:class_name</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="n">options</span><span class="o">[</span><span class="ss">:dependent</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 字符串转成class</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:class_name</span><span class="o">].</span><span class="n">constantize</span>
</span><span class='line'>  <span class="c1"># 使用了has_ancestry这个gem</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">has_ancestry</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:table_name</span><span class="o">=</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 设置表名</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">table_name</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:table_name</span><span class="o">]</span>
</span><span class='line'>    <span class="c1"># 导入scopes.rb文件定义的几个scope</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">initialize_scopes</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="c1"># 老式用法</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">set_table_name</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:table_name</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Deprecation</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">&quot;Calling set_table_name is deprecated. Please use `self.table_name = &#39;the_name&#39;` instead.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 包裹成数据</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">required</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">wrap</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:required</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 验证参数的存在性</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">validates_presence_of</span> <span class="nb">self</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">required</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">group_messages</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:group_messages</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActsAsMessageable</span><span class="p">:</span><span class="ss">:Model</span><span class="o">::</span><span class="no">InstanceMethods</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">initialize_scopes</span>
</span><span class='line'>  <span class="c1"># 查找发送消息的对象</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:are_from</span><span class="p">,</span>          <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|*</span><span class="n">args</span><span class="o">|</span> <span class="n">where</span><span class="p">(</span><span class="ss">:sent_messageable_id</span> <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="p">,</span> <span class="ss">:sent_messageable_type</span> <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="c1"># 查找接收消息的对象</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:are_to</span><span class="p">,</span>            <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|*</span><span class="n">args</span><span class="o">|</span> <span class="n">where</span><span class="p">(</span><span class="ss">:received_messageable_id</span> <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="p">,</span> <span class="ss">:received_messageable_type</span> <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="c1"># 模糊查找body和topic的内容</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:search</span><span class="p">,</span>            <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|*</span><span class="n">args</span><span class="o">|</span>  <span class="n">where</span><span class="p">(</span><span class="s2">&quot;body like :search_txt or topic like :search_txt&quot;</span><span class="p">,</span><span class="ss">:search_txt</span> <span class="o">=&gt;</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="si">}</span><span class="s2">%&quot;</span><span class="p">)}</span>
</span><span class='line'>  <span class="c1"># 传两个参数，第一个是发送消息的对象或者接收消息的对象，第二个为布尔值，是否删除</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:connected_with</span><span class="p">,</span>    <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|*</span><span class="n">args</span><span class="o">|</span>  <span class="n">where</span><span class="p">(</span><span class="s2">&quot;(sent_messageable_type = :sent_type and</span>
</span><span class='line'><span class="s2">                                            sent_messageable_id = :sent_id and</span>
</span><span class='line'><span class="s2">                                            sender_delete = :s_delete and sender_permanent_delete = :s_perm_delete) or</span>
</span><span class='line'><span class="s2">                                            (received_messageable_type = :received_type and</span>
</span><span class='line'><span class="s2">                                            received_messageable_id = :received_id and</span>
</span><span class='line'><span class="s2">                                            recipient_delete = :r_delete and recipient_permanent_delete = :r_perm_delete)&quot;</span><span class="p">,</span>
</span><span class='line'>                                            <span class="ss">:sent_type</span>      <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">resolve_active_record_ancestor</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span>
</span><span class='line'>                                            <span class="ss">:sent_id</span>        <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>                                            <span class="ss">:received_type</span>  <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">resolve_active_record_ancestor</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span>
</span><span class='line'>                                            <span class="ss">:received_id</span>    <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>                                            <span class="ss">:r_delete</span>       <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">last</span><span class="p">,</span>
</span><span class='line'>                                            <span class="ss">:s_delete</span>       <span class="o">=&gt;</span> <span class="n">args</span><span class="o">.</span><span class="n">last</span><span class="p">,</span>
</span><span class='line'>                                            <span class="ss">:r_perm_delete</span>  <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>                                            <span class="ss">:s_perm_delete</span>  <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1"># 查找已经被查阅的</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:readed</span><span class="p">,</span>            <span class="nb">lambda</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">:opened</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>  <span class="p">}</span>
</span><span class='line'>  <span class="c1"># 查找还未被查阅的</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:unreaded</span><span class="p">,</span>          <span class="nb">lambda</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">:opened</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="c1"># 查找删除过的</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:deleted</span><span class="p">,</span>           <span class="nb">lambda</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">:recipient_delete</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:sender_delete</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样来使用的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">acts_as_messageable</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActsAsMessageable</span><span class="p">:</span><span class="ss">:Message</span><span class="o">.</span><span class="n">are_from</span><span class="p">(</span><span class="no">User</span><span class="o">.</span><span class="n">first</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">SELECT</span> <span class="sb">`messages`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`messages`</span> <span class="no">WHERE</span> <span class="sb">`messages`</span><span class="o">.</span><span class="n">`sent_messageable_id</span><span class="sb">` = 1 AND `</span><span class="n">messages</span><span class="sb">`.`</span><span class="n">sent_messageable_type</span><span class="sb">` = &#39;User&#39; ORDER BY created_at desc</span>
</span><span class='line'>
</span><span class='line'><span class="sb">ActsAsMessageable::Message.connected_with(User.first, false)</span>
</span><span class='line'><span class="sb">=&gt; SELECT `</span><span class="n">messages</span><span class="sb">`.* FROM `</span><span class="n">messages</span><span class="sb">` WHERE ((sent_messageable_type = &#39;User&#39; and</span>
</span><span class='line'><span class="sb"> sent_messageable_id = 1 and</span>
</span><span class='line'><span class="sb"> sender_delete = 0 and sender_permanent_delete = 0) or</span>
</span><span class='line'><span class="sb"> (received_messageable_type = &#39;User&#39; and</span>
</span><span class='line'><span class="sb"> received_messageable_id = 1 and</span>
</span><span class='line'><span class="sb"> recipient_delete = 0 and recipient_permanent_delete = 0)) ORDER BY created_at desc</span>
</span></code></pre></td></tr></table></div></figure>


<h3>send_message</h3>

<p>发送消息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">send_message</span><span class="p">(</span><span class="n">to</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="n">message_attributes</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 判断第一个参数的类型</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>    <span class="k">when</span> <span class="nb">String</span>
</span><span class='line'>      <span class="c1"># attribute为topic, body之类</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">required</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">attribute</span><span class="p">,</span> <span class="n">index</span><span class="o">|</span>
</span><span class='line'>        <span class="c1"># index为0,1之类</span>
</span><span class='line'>        <span class="n">message_attributes</span><span class="o">[</span><span class="n">attribute</span><span class="o">]</span> <span class="o">=</span> <span class="n">args</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">when</span> <span class="no">Hash</span>
</span><span class='line'>      <span class="n">message_attributes</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 存topic, body的值</span>
</span><span class='line'>  <span class="n">message</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">new</span> <span class="n">message_attributes</span>
</span><span class='line'>  <span class="c1"># 存接收者对象的class和id</span>
</span><span class='line'>  <span class="n">message</span><span class="o">.</span><span class="n">received_messageable</span> <span class="o">=</span> <span class="n">to</span>
</span><span class='line'>  <span class="c1"># 存发送者对象的class和id</span>
</span><span class='line'>  <span class="n">message</span><span class="o">.</span><span class="n">sent_messageable</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>  <span class="n">message</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">message</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">send_message</span><span class="p">(</span><span class="no">User</span><span class="o">.</span><span class="n">last</span><span class="p">,</span> <span class="s1">&#39;h1, u2&#39;</span><span class="p">,</span> <span class="s1">&#39;hello u2&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="sb">`messages`</span> <span class="p">(</span><span class="sb">`ancestry`</span><span class="p">,</span> <span class="sb">`body`</span><span class="p">,</span> <span class="sb">`created_at`</span><span class="p">,</span> <span class="sb">`opened`</span><span class="p">,</span> <span class="sb">`received_messageable_id`</span><span class="p">,</span> <span class="sb">`received_messageable_type`</span><span class="p">,</span> <span class="sb">`recipient_delete`</span><span class="p">,</span> <span class="sb">`recipient_permanent_delete`</span><span class="p">,</span> <span class="sb">`sender_delete`</span><span class="p">,</span> <span class="sb">`sender_permanent_delete`</span><span class="p">,</span> <span class="sb">`sent_messageable_id`</span><span class="p">,</span> <span class="sb">`sent_messageable_type`</span><span class="p">,</span> <span class="sb">`topic`</span><span class="p">,</span> <span class="sb">`updated_at`</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="no">NULL</span><span class="p">,</span> <span class="s1">&#39;hello u2&#39;</span><span class="p">,</span> <span class="s1">&#39;2014-01-14 07:02:44&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;User&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;User&#39;</span><span class="p">,</span> <span class="s1">&#39;h1, u2&#39;</span><span class="p">,</span> <span class="s1">&#39;2014-01-14 07:02:44&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>reply_to</h3>

<p>回复</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">reply_to</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="n">current_user</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">message</span><span class="o">.</span><span class="n">participant?</span><span class="p">(</span><span class="n">current_user</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 根据real_receiver反方向发送等于回复，产生一个新的消息(即回复)</span>
</span><span class='line'>    <span class="n">reply_message</span> <span class="o">=</span> <span class="n">send_message</span><span class="p">(</span><span class="n">message</span><span class="o">.</span><span class="n">real_receiver</span><span class="p">(</span><span class="n">current_user</span><span class="p">),</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 新产生的回复的父是刚才的消息</span>
</span><span class='line'>    <span class="n">reply_message</span><span class="o">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">message</span>
</span><span class='line'>    <span class="n">reply_message</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 返回回复的消息</span>
</span><span class='line'>    <span class="n">reply_message</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">participant?</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>  <span class="n">user</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">group_messages</span> <span class="o">||</span> <span class="p">(</span><span class="n">to</span> <span class="o">==</span> <span class="n">user</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">from</span> <span class="o">==</span> <span class="n">user</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">alias</span> <span class="ss">:from</span> <span class="ss">:sent_messageable</span>
</span><span class='line'><span class="k">alias</span> <span class="ss">:to</span>   <span class="ss">:received_messageable</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 定义的消息接收者和发送者对象</span>
</span><span class='line'><span class="n">belongs_to</span> <span class="ss">:received_messageable</span><span class="p">,</span> <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="n">belongs_to</span> <span class="ss">:sent_messageable</span><span class="p">,</span>     <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">real_receiver</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>  <span class="n">user</span> <span class="o">==</span> <span class="n">from</span> <span class="p">?</span> <span class="n">to</span> <span class="p">:</span> <span class="n">from</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">m1</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">send_message</span><span class="p">(</span><span class="no">User</span><span class="o">.</span><span class="n">last</span><span class="p">,</span> <span class="s1">&#39;hi, u2&#39;</span><span class="p">,</span> <span class="s1">&#39;hello u2&#39;</span><span class="p">)</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">reply_to</span><span class="p">(</span><span class="n">m1</span><span class="p">,</span> <span class="s1">&#39;reply: u1&#39;</span><span class="p">,</span> <span class="s2">&quot;I&#39;m fine!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="sb">`messages`</span> <span class="p">(</span><span class="sb">`ancestry`</span><span class="p">,</span> <span class="sb">`body`</span><span class="p">,</span> <span class="sb">`created_at`</span><span class="p">,</span> <span class="sb">`opened`</span><span class="p">,</span> <span class="sb">`received_messageable_id`</span><span class="p">,</span> <span class="sb">`received_messageable_type`</span><span class="p">,</span> <span class="sb">`recipient_delete`</span><span class="p">,</span> <span class="sb">`recipient_permanent_delete`</span><span class="p">,</span> <span class="sb">`sender_delete`</span><span class="p">,</span> <span class="sb">`sender_permanent_delete`</span><span class="p">,</span> <span class="sb">`sent_messageable_id`</span><span class="p">,</span> <span class="sb">`sent_messageable_type`</span><span class="p">,</span> <span class="sb">`topic`</span><span class="p">,</span> <span class="sb">`updated_at`</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="no">NULL</span><span class="p">,</span> <span class="s1">&#39;I\&#39;m fine!&#39;</span><span class="p">,</span> <span class="s1">&#39;2014-01-14 07:25:39&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;User&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;User&#39;</span><span class="p">,</span> <span class="s1">&#39;reply: u1&#39;</span><span class="p">,</span> <span class="s1">&#39;2014-01-14 07:25:39&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>process和conversations</h3>

<p>删除和恢复还有查找对话</p>

<p>执行m1.delete => true</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">attr_accessor</span>   <span class="ss">:removed</span><span class="p">,</span> <span class="ss">:restored</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">delete</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">removed</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果要真正删除</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">messages</span><span class="o">.</span><span class="n">process</span> <span class="k">do</span> <span class="o">|</span><span class="n">message</span><span class="o">|</span>
</span><span class='line'>  <span class="n">message</span><span class="o">.</span><span class="n">delete</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>来看下process方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Relation</span><span class="o">.</span><span class="n">send</span> <span class="ss">:include</span><span class="p">,</span> <span class="ss">ActsAsMessageable</span><span class="p">:</span><span class="ss">:Relation</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># relation_context这个变量是在ActiveRecord::Relation基础上定义的</span>
</span><span class='line'><span class="kp">attr_accessor</span> <span class="ss">:relation_context</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">messages</span><span class="p">(</span><span class="n">trash</span> <span class="o">=</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">messages_class_name</span><span class="o">.</span><span class="n">connected_with</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="n">trash</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># relation_context存的是user</span>
</span><span class='line'>  <span class="n">result</span><span class="o">.</span><span class="n">relation_context</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">result</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">process</span><span class="p">(</span><span class="n">context</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">relation_context</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">message</span><span class="o">|</span>
</span><span class='line'>    <span class="c1"># 执行传过来的block,这个方法会执行delete</span>
</span><span class='line'>    <span class="n">block</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">message</span><span class="p">)</span> <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="c1"># 如果原先执行过delete，就执行delete_message方法</span>
</span><span class='line'>    <span class="n">context</span><span class="o">.</span><span class="n">delete_message</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>   <span class="k">if</span> <span class="n">message</span><span class="o">.</span><span class="n">removed</span>
</span><span class='line'>    <span class="n">context</span><span class="o">.</span><span class="n">restore_message</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>  <span class="k">if</span> <span class="n">message</span><span class="o">.</span><span class="n">restored</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">delete_message</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'>  <span class="n">current_user</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 查找message是发送的还是接收的, 如果被删除过的话就要永久删除</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">current_user</span>
</span><span class='line'>    <span class="k">when</span> <span class="n">message</span><span class="o">.</span><span class="n">to</span>
</span><span class='line'>      <span class="n">attribute</span> <span class="o">=</span> <span class="n">message</span><span class="o">.</span><span class="n">recipient_delete</span> <span class="p">?</span> <span class="ss">:recipient_permanent_delete</span> <span class="p">:</span> <span class="ss">:recipient_delete</span>
</span><span class='line'>    <span class="k">when</span> <span class="n">message</span><span class="o">.</span><span class="n">from</span>
</span><span class='line'>      <span class="n">attribute</span> <span class="o">=</span> <span class="n">message</span><span class="o">.</span><span class="n">sender_delete</span> <span class="p">?</span> <span class="ss">:sender_permanent_delete</span> <span class="p">:</span> <span class="ss">:sender_delete</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">raise</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">current_user</span><span class="si">}</span><span class="s2"> can&#39;t delete this message&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">message</span><span class="o">.</span><span class="n">update_attributes!</span><span class="p">(</span><span class="n">attribute</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">conversations</span>
</span><span class='line'>  <span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span> <span class="n">r</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">subtree</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;id desc&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span> <span class="p">}</span><span class="o">.</span><span class="n">uniq</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-taggable-on源码分析(九)]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-9/"/>
    <updated>2014-01-08T16:06:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-9</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on源码分析(一)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2/">Acts-as-taggable-on源码分析(二)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3/">Acts-as-taggable-on源码分析(三)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-4/">Acts-as-taggable-on源码分析(四)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-5/">Acts-as-taggable-on源码分析(五)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-6/">Acts-as-taggable-on源码分析(六)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-7/">Acts-as-taggable-on源码分析(七)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-8/">Acts-as-taggable-on源码分析(八)</a></li>
</ul>


<p>这节我们主要来研究cache,主要是cached_tag_list字段的用法</p>

<!-- more -->


<p>每次查topic的tag_list都要从数据库取,有点麻烦,acts_as_taggable_on提供了一个解决方案,在topics表中增加一个字段cached_tag_list,存的是tag_list,例如&#8217;ruby, rails&#8217;,这样就方便多了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails g migration add_cached_tag_list_to_topics cached_tag_list:string
</span><span class='line'>
</span><span class='line'>t1.tag_list = 'ruby, rails, php, python'
</span><span class='line'>=&gt; UPDATE `topics` SET `cached_tag_list` = 'ruby, rails, php, python', `updated_at` = '2014-01-08 07:57:40' WHERE `topics`.`id` = 4</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tag_types</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag_type</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">class_eval</span> <span class="o">&lt;&lt;-</span><span class="no">RUBY</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="sh">    # 判断是否拥有cached_tag_list列</span>
</span><span class='line'><span class="sh">    def self.caching_#{tag_type.singularize}_list?</span>
</span><span class='line'><span class="sh">      caching_tag_list_on?(&quot;#{tag_type}&quot;)</span>
</span><span class='line'><span class="sh">    end</span>
</span><span class='line'><span class="no">  RUBY</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">caching_tag_list_on?</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="n">column_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;cached_</span><span class="si">#{</span><span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">singularize</span><span class="si">}</span><span class="s2">_list&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">before_save</span> <span class="ss">:save_cached_tag_list</span>
</span><span class='line'><span class="k">def</span> <span class="nf">save_cached_tag_list</span>
</span><span class='line'>  <span class="n">tag_types</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag_type</span><span class="o">|</span>
</span><span class='line'>    <span class="c1"># 先判断是否有cached_tag_list列</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;caching_</span><span class="si">#{</span><span class="n">tag_type</span><span class="o">.</span><span class="n">singularize</span><span class="si">}</span><span class="s2">_list?&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># 参数解析,前面已讲过</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">tag_list_cache_set_on</span><span class="p">(</span><span class="n">tag_type</span><span class="p">)</span>
</span><span class='line'>        <span class="n">list</span> <span class="o">=</span> <span class="n">tag_list_cache_on</span><span class="p">(</span><span class="n">tag_type</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">compact</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="c1"># 存其值</span>
</span><span class='line'>        <span class="nb">self</span><span class="o">[</span><span class="s2">&quot;cached_</span><span class="si">#{</span><span class="n">tag_type</span><span class="o">.</span><span class="n">singularize</span><span class="si">}</span><span class="s2">_list&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="n">list</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果没有cached_tag_list列,这个特性默认是不开启的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 至少存在一个类似cached_tag_list这样的列就不会退出</span>
</span><span class='line'><span class="k">return</span> <span class="k">unless</span> <span class="n">base</span><span class="o">.</span><span class="n">table_exists?</span> <span class="o">&amp;&amp;</span> <span class="n">base</span><span class="o">.</span><span class="n">tag_types</span><span class="o">.</span><span class="n">any?</span> <span class="p">{</span> <span class="o">|</span><span class="n">context</span><span class="o">|</span> <span class="n">base</span><span class="o">.</span><span class="n">column_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;cached_</span><span class="si">#{</span><span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">singularize</span><span class="si">}</span><span class="s2">_list&quot;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-taggable-on源码分析(八)]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-8/"/>
    <updated>2014-01-08T14:39:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-8</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on源码分析(一)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2/">Acts-as-taggable-on源码分析(二)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3/">Acts-as-taggable-on源码分析(三)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-4/">Acts-as-taggable-on源码分析(四)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-5/">Acts-as-taggable-on源码分析(五)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-6/">Acts-as-taggable-on源码分析(六)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-7/">Acts-as-taggable-on源码分析(七)</a></li>
</ul>


<p>这节我们主要来研究Collection,主要是tag_counts的用法</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Topic.tag_counts
</span><span class='line'>=&gt; SELECT tags.*, taggings.tags_count AS count FROM `tags` JOIN (SELECT taggings.tag_id, COUNT(taggings.tag_id) AS tags_count FROM `taggings` INNER JOIN topics ON topics.id = taggings.taggable_id WHERE (taggings.taggable_type = 'Topic' AND taggings.context = 'tags') AND (taggings.taggable_id IN(4,6,7)) GROUP BY taggings.tag_id HAVING COUNT(taggings.tag_id) &gt; 0) AS taggings ON taggings.tag_id = tags.id</span></code></pre></td></tr></table></div></figure>


<p>tag_counts方法定义在lib/acts-as-taggable-on/collection.rb文件中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tag_types</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag_type</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">class_eval</span> <span class="o">&lt;&lt;-</span><span class="no">RUBY</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="sh">    def self.#{tag_type.singularize}_counts(options={})</span>
</span><span class='line'><span class="sh">      tag_counts_on(&#39;#{tag_type}&#39;, options)</span>
</span><span class='line'><span class="sh">    end</span>
</span><span class='line'>
</span><span class='line'><span class="sh">    def #{tag_type.singularize}_counts(options = {})</span>
</span><span class='line'><span class="sh">      tag_counts_on(&#39;#{tag_type}&#39;, options)</span>
</span><span class='line'><span class="sh">    end</span>
</span><span class='line'>
</span><span class='line'><span class="sh">    def top_#{tag_type}(limit = 10)</span>
</span><span class='line'><span class="sh">      tag_counts_on(&#39;#{tag_type}&#39;, :order =&gt; &#39;count desc&#39;, :limit =&gt; limit.to_i)</span>
</span><span class='line'><span class="sh">    end</span>
</span><span class='line'>
</span><span class='line'><span class="sh">    def self.top_#{tag_type}(limit = 10)</span>
</span><span class='line'><span class="sh">      tag_counts_on(&#39;#{tag_type}&#39;, :order =&gt; &#39;count desc&#39;, :limit =&gt; limit.to_i)</span>
</span><span class='line'><span class="sh">    end</span>
</span><span class='line'><span class="no">  RUBY</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>可见,tag_counts即可以是实例方法,也可以是类方法(带self)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tag_counts_on</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>  <span class="n">all_tag_counts</span><span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">merge</span><span class="p">({</span><span class="ss">:on</span> <span class="o">=&gt;</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="p">}))</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">all_tag_counts</span><span class="p">(</span><span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>  <span class="c1"># 验证参数</span>
</span><span class='line'>  <span class="n">options</span><span class="o">.</span><span class="n">assert_valid_keys</span> <span class="ss">:start_at</span><span class="p">,</span> <span class="ss">:end_at</span><span class="p">,</span> <span class="ss">:conditions</span><span class="p">,</span> <span class="ss">:at_least</span><span class="p">,</span> <span class="ss">:at_most</span><span class="p">,</span> <span class="ss">:order</span><span class="p">,</span> <span class="ss">:limit</span><span class="p">,</span> <span class="ss">:on</span><span class="p">,</span> <span class="ss">:id</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scope</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 如果有条件就加入</span>
</span><span class='line'>  <span class="n">options</span><span class="o">[</span><span class="ss">:conditions</span><span class="o">]</span> <span class="o">=</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:conditions</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:conditions</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 创建的开始时间</span>
</span><span class='line'>  <span class="n">start_at_conditions</span> <span class="o">=</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.created_at &gt;= ?&quot;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:start_at</span><span class="p">)</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:start_at</span><span class="o">]</span>
</span><span class='line'>  <span class="c1"># 创建的结束时间</span>
</span><span class='line'>  <span class="n">end_at_conditions</span>   <span class="o">=</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.created_at &lt;= ?&quot;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:end_at</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>   <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:end_at</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># taggable和context的查询条件</span>
</span><span class='line'>  <span class="n">taggable_conditions</span>  <span class="o">=</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_type = ?&quot;</span><span class="p">,</span> <span class="n">base_class</span><span class="o">.</span><span class="n">name</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">taggable_conditions</span> <span class="o">&lt;&lt;</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot; AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_id = ?&quot;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>  <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span>
</span><span class='line'>  <span class="n">taggable_conditions</span> <span class="o">&lt;&lt;</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot; AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.context = ?&quot;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:on</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:on</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 查taggings表的条件</span>
</span><span class='line'>  <span class="n">tagging_conditions</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>    <span class="n">taggable_conditions</span><span class="p">,</span>
</span><span class='line'>    <span class="n">scope</span><span class="o">[</span><span class="ss">:conditions</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="n">start_at_conditions</span><span class="p">,</span>
</span><span class='line'>    <span class="n">end_at_conditions</span>
</span><span class='line'>  <span class="o">].</span><span class="n">compact</span><span class="o">.</span><span class="n">reverse</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 查tags表的条件</span>
</span><span class='line'>  <span class="n">tag_conditions</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>    <span class="n">options</span><span class="o">[</span><span class="ss">:conditions</span><span class="o">]</span>
</span><span class='line'>  <span class="o">].</span><span class="n">compact</span><span class="o">.</span><span class="n">reverse</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 这个table_name是topics</span>
</span><span class='line'>  <span class="n">taggable_join</span> <span class="o">=</span> <span class="s2">&quot;INNER JOIN </span><span class="si">#{</span><span class="n">table_name</span><span class="si">}</span><span class="s2"> ON </span><span class="si">#{</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">primary_key</span><span class="si">}</span><span class="s2"> = </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_id&quot;</span>
</span><span class='line'>  <span class="n">taggable_join</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; AND </span><span class="si">#{</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">inheritance_column</span><span class="si">}</span><span class="s2"> = &#39;</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&#39;&quot;</span> <span class="k">unless</span> <span class="n">descends_from_active_record?</span> <span class="c1"># Current model is STI descendant, so add type checking to the join condition</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">tagging_joins</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>    <span class="n">taggable_join</span><span class="p">,</span>
</span><span class='line'>    <span class="n">scope</span><span class="o">[</span><span class="ss">:joins</span><span class="o">]</span>
</span><span class='line'>  <span class="o">].</span><span class="n">compact</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">tag_joins</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>  <span class="o">].</span><span class="n">compact</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 用select选择列</span>
</span><span class='line'>  <span class="n">tagging_scope</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id, COUNT(</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id) AS tags_count&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tag_scope</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.*, </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tags_count AS count&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:order</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:limit</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 上面的select加join操作</span>
</span><span class='line'>  <span class="n">tagging_joins</span><span class="o">.</span><span class="n">each</span>      <span class="p">{</span> <span class="o">|</span><span class="n">join</span><span class="o">|</span>      <span class="n">tagging_scope</span> <span class="o">=</span> <span class="n">tagging_scope</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="n">join</span><span class="p">)</span>      <span class="p">}</span>
</span><span class='line'>  <span class="c1"># 上面的select加where条件操作</span>
</span><span class='line'>  <span class="n">tagging_conditions</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">condition</span><span class="o">|</span> <span class="n">tagging_scope</span> <span class="o">=</span> <span class="n">tagging_scope</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">condition</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">tag_joins</span><span class="o">.</span><span class="n">each</span>          <span class="p">{</span> <span class="o">|</span><span class="n">join</span><span class="o">|</span>      <span class="n">tag_scope</span>     <span class="o">=</span> <span class="n">tag_scope</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="n">join</span><span class="p">)</span>          <span class="p">}</span>
</span><span class='line'>  <span class="n">tag_conditions</span><span class="o">.</span><span class="n">each</span>     <span class="p">{</span> <span class="o">|</span><span class="n">condition</span><span class="o">|</span> <span class="n">tag_scope</span>     <span class="o">=</span> <span class="n">tag_scope</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">condition</span><span class="p">)</span>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 最少几个tag</span>
</span><span class='line'>  <span class="n">at_least</span>  <span class="o">=</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;COUNT(</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id) &gt;= ?&quot;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:at_least</span><span class="p">)</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:at_least</span><span class="o">]</span>
</span><span class='line'>  <span class="c1"># 最多几个tag</span>
</span><span class='line'>  <span class="n">at_most</span>   <span class="o">=</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;COUNT(</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id) &lt;= ?&quot;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:at_most</span><span class="p">)</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:at_most</span><span class="o">]</span>
</span><span class='line'>  <span class="n">having</span>    <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;COUNT(</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id) &gt; 0&quot;</span><span class="p">,</span> <span class="n">at_least</span><span class="p">,</span> <span class="n">at_most</span><span class="o">].</span><span class="n">compact</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; AND &#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 分组的列</span>
</span><span class='line'>  <span class="n">group_columns</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scoped_select</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">primary_key</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">select_query</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">select</span><span class="p">(</span><span class="n">scoped_select</span><span class="p">)</span><span class="o">.</span><span class="n">to_sql</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 查找topics表中的所有id</span>
</span><span class='line'>  <span class="n">res</span> <span class="o">=</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">select_all</span><span class="p">(</span><span class="n">select_query</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span> <span class="n">item</span><span class="o">.</span><span class="n">values</span> <span class="p">}</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">compact</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">res</span> <span class="o">=</span> <span class="s2">&quot;NULL&quot;</span> <span class="k">if</span> <span class="n">res</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 用where in语句来找</span>
</span><span class='line'>  <span class="n">tagging_scope</span> <span class="o">=</span> <span class="n">tagging_scope</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_id IN(</span><span class="si">#{</span><span class="n">res</span><span class="si">}</span><span class="s2">)&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 分组</span>
</span><span class='line'>  <span class="n">tagging_scope</span> <span class="o">=</span> <span class="n">tagging_scope</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="n">group_columns</span><span class="p">)</span><span class="o">.</span><span class="n">having</span><span class="p">(</span><span class="n">having</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 关联taggings和tags表,查找tags表</span>
</span><span class='line'>  <span class="n">tag_scope</span> <span class="o">=</span> <span class="n">tag_scope</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="s2">&quot;JOIN (</span><span class="si">#{</span><span class="n">tagging_scope</span><span class="o">.</span><span class="n">to_sql</span><span class="si">}</span><span class="s2">) AS </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2"> ON </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id = </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.id&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tag_scope</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果是实例的tag_counts方法呢</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tag_counts_on</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">tag_counts_on</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="nb">id</span><span class="p">))</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>多传了一个id的参数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">all_tag_counts</span><span class="p">(</span><span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="c1"># 这一行或被执行在查数据时就会查特定的topic了</span>
</span><span class='line'>  <span class="n">taggable_conditions</span> <span class="o">&lt;&lt;</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot; AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_id = ?&quot;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>  <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>collection.rb文件中还有all_tags的方法,跟all_tag_counts差不多,可以自己研究一下</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-taggable-on源码分析(七)]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-7/"/>
    <updated>2014-01-08T10:48:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-7</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on源码分析(一)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2/">Acts-as-taggable-on源码分析(二)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3/">Acts-as-taggable-on源码分析(三)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-4/">Acts-as-taggable-on源码分析(四)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-5/">Acts-as-taggable-on源码分析(五)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-6/">Acts-as-taggable-on源码分析(六)</a></li>
</ul>


<p>这节我们来讲解Tag Ownership,也即是acts_as_tagger的原理</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Topic</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">acts_as_taggable</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">acts_as_tagger</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>来看下acts_as_tagger实现的源码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">acts_as_tagger</span><span class="p">(</span><span class="n">opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="nb">class_eval</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">has_many_with_compatibility</span> <span class="ss">:owned_taggings</span><span class="p">,</span>
</span><span class='line'>      <span class="n">opts</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span>
</span><span class='line'>        <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:tagger</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:destroy</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tagging&quot;</span>
</span><span class='line'>      <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">has_many_with_compatibility</span> <span class="ss">:owned_tags</span><span class="p">,</span>
</span><span class='line'>                                <span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:owned_taggings</span><span class="p">,</span>
</span><span class='line'>                                <span class="ss">:source</span> <span class="o">=&gt;</span> <span class="ss">:tag</span><span class="p">,</span>
</span><span class='line'>                                <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tag&quot;</span><span class="p">,</span>
</span><span class='line'>                                <span class="ss">:uniq</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>所以可以user.owned_taggings, user.owned_tags</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">u</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">u</span><span class="o">.</span><span class="n">tag</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s2">&quot;user1&quot;</span><span class="p">,</span> <span class="ss">:on</span> <span class="o">=&gt;</span> <span class="ss">:tags</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">=&gt;</span>
</span><span class='line'><span class="no">INSERT</span> <span class="no">INTO</span> <span class="sb">`taggings`</span> <span class="p">(</span><span class="sb">`context`</span><span class="p">,</span> <span class="sb">`created_at`</span><span class="p">,</span> <span class="sb">`tag_id`</span><span class="p">,</span> <span class="sb">`taggable_id`</span><span class="p">,</span> <span class="sb">`taggable_type`</span><span class="p">,</span> <span class="sb">`tagger_id`</span><span class="p">,</span> <span class="sb">`tagger_type`</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="s1">&#39;tags&#39;</span><span class="p">,</span> <span class="s1">&#39;2014-01-08 03:04:29&#39;</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s1">&#39;Topic&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;User&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tag</span><span class="p">(</span><span class="n">taggable</span><span class="p">,</span> <span class="n">opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="c1"># 即将有相同的key也不替换</span>
</span><span class='line'>  <span class="n">opts</span><span class="o">.</span><span class="n">reverse_merge!</span><span class="p">(</span><span class="ss">:force</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 是否要跳过save</span>
</span><span class='line'>  <span class="n">skip_save</span> <span class="o">=</span> <span class="n">opts</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:skip_save</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 如果taggable没有使用acts_as_taggable就退出</span>
</span><span class='line'>  <span class="k">return</span> <span class="kp">false</span> <span class="k">unless</span> <span class="n">taggable</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:is_taggable?</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">taggable</span><span class="o">.</span><span class="n">is_taggable?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 必须传:on参数</span>
</span><span class='line'>  <span class="k">raise</span> <span class="s2">&quot;You need to specify a tag context using :on&quot;</span>                <span class="k">unless</span> <span class="n">opts</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="ss">:on</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 必须传:with参数</span>
</span><span class='line'>  <span class="k">raise</span> <span class="s2">&quot;You need to specify some tags using :with&quot;</span>                  <span class="k">unless</span> <span class="n">opts</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="ss">:with</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># context参数没传对</span>
</span><span class='line'>  <span class="k">raise</span> <span class="s2">&quot;No context :</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:on</span><span class="o">]</span><span class="si">}</span><span class="s2"> defined in </span><span class="si">#{</span><span class="n">taggable</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">unless</span> <span class="p">(</span><span class="n">opts</span><span class="o">[</span><span class="ss">:force</span><span class="o">]</span> <span class="o">||</span> <span class="n">taggable</span><span class="o">.</span><span class="n">tag_types</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">opts</span><span class="o">[</span><span class="ss">:on</span><span class="o">]</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">taggable</span><span class="o">.</span><span class="n">set_owner_tag_list_on</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:on</span><span class="o">].</span><span class="n">to_s</span><span class="p">,</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:with</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">taggable</span><span class="o">.</span><span class="n">save</span> <span class="k">unless</span> <span class="n">skip_save</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>set_owner_tag_list_on方法定义在lib/acts_as_taggable_on/ownership.rb文件中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">set_owner_tag_list_on</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span> <span class="n">context</span><span class="p">,</span> <span class="n">new_list</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 把context添加@custom_context变量中</span>
</span><span class='line'>  <span class="n">add_custom_context</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 取变量的值,初始可能为空</span>
</span><span class='line'>  <span class="n">cache</span> <span class="o">=</span> <span class="n">cached_owned_tag_list_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 现在的值不为空,很关键的语句</span>
</span><span class='line'>  <span class="n">cache</span><span class="o">[</span><span class="n">owner</span><span class="o">]</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:TagList</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="n">new_list</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">cached_owned_tag_list_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="n">variable_name</span> <span class="o">=</span> <span class="s2">&quot;@owned_</span><span class="si">#{</span><span class="n">context</span><span class="si">}</span><span class="s2">_list&quot;</span>
</span><span class='line'>  <span class="c1"># 如果有定义variable_name,就把值给cache,没有的话就设为{}</span>
</span><span class='line'>  <span class="n">cache</span> <span class="o">=</span> <span class="p">(</span><span class="n">instance_variable_defined?</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">instance_variable_get</span><span class="p">(</span><span class="n">variable_name</span><span class="p">))</span> <span class="o">||</span> <span class="nb">instance_variable_set</span><span class="p">(</span><span class="n">variable_name</span><span class="p">,</span> <span class="p">{})</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>怎么在taggings表中的tagger_type存User的呢</p>

<p>玄机在taggable.save unless skip_save</p>

<p>taggable保存之后</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">after_save</span> <span class="ss">:save_owned_tags</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">save_owned_tags</span>
</span><span class='line'>  <span class="n">tagging_contexts</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">context</span><span class="o">|</span>
</span><span class='line'>    <span class="c1"># onwer是个key,tag_list是值</span>
</span><span class='line'>    <span class="n">cached_owned_tag_list_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">owner</span><span class="p">,</span> <span class="n">tag_list</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 查找已经存在的tag或者创建新的,返回的是当前的tag</span>
</span><span class='line'>      <span class="n">tags</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">find_or_create_all_with_like_by_name</span><span class="p">(</span><span class="n">tag_list</span><span class="o">.</span><span class="n">uniq</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 关联tagger查tags表,返回where查询</span>
</span><span class='line'>      <span class="n">owned_tags</span> <span class="o">=</span> <span class="n">owner_tags_on</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span> <span class="n">context</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># Tag maintenance based on whether preserving the created order of tags</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">preserve_tag_order?</span>
</span><span class='line'>        <span class="n">old_tags</span><span class="p">,</span> <span class="n">new_tags</span> <span class="o">=</span> <span class="n">owned_tags</span> <span class="o">-</span> <span class="n">tags</span><span class="p">,</span> <span class="n">tags</span> <span class="o">-</span> <span class="n">owned_tags</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">shared_tags</span> <span class="o">=</span> <span class="n">owned_tags</span> <span class="o">&amp;</span> <span class="n">tags</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">shared_tags</span><span class="o">.</span><span class="n">any?</span> <span class="o">&amp;&amp;</span> <span class="n">tags</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">shared_tags</span><span class="o">.</span><span class="n">size</span><span class="o">]</span> <span class="o">!=</span> <span class="n">shared_tags</span>
</span><span class='line'>          <span class="n">index</span> <span class="o">=</span> <span class="n">shared_tags</span><span class="o">.</span><span class="n">each_with_index</span> <span class="p">{</span> <span class="o">|</span><span class="n">_</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span> <span class="k">break</span> <span class="n">i</span> <span class="k">unless</span> <span class="n">shared_tags</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="n">tags</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1"># Update arrays of tag objects</span>
</span><span class='line'>          <span class="n">old_tags</span> <span class="o">|=</span> <span class="n">owned_tags</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
</span><span class='line'>          <span class="n">new_tags</span> <span class="o">|=</span> <span class="n">owned_tags</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="o">&amp;</span> <span class="n">shared_tags</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1"># Order the array of tag objects to match the tag list</span>
</span><span class='line'>          <span class="n">new_tags</span> <span class="o">=</span> <span class="n">tags</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">new_tags</span><span class="o">.</span><span class="n">find</span> <span class="p">{</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span> <span class="o">==</span> <span class="n">t</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span> <span class="p">}</span> <span class="p">}</span><span class="o">.</span><span class="n">compact</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="c1"># 找到老的tags</span>
</span><span class='line'>        <span class="n">old_tags</span> <span class="o">=</span> <span class="n">owned_tags</span> <span class="o">-</span> <span class="n">tags</span>
</span><span class='line'>        <span class="c1"># 找到新的tags</span>
</span><span class='line'>        <span class="n">new_tags</span> <span class="o">=</span> <span class="n">tags</span> <span class="o">-</span> <span class="n">owned_tags</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 从tags中找到老的,准备关联查找taggings,并删除</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">old_tags</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>        <span class="n">old_taggings</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:taggable_id</span> <span class="o">=&gt;</span> <span class="nb">id</span><span class="p">,</span> <span class="ss">:taggable_type</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">base_class</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span>
</span><span class='line'>                                                       <span class="ss">:tagger_type</span> <span class="o">=&gt;</span> <span class="n">owner</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">base_class</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="ss">:tagger_id</span> <span class="o">=&gt;</span> <span class="n">owner</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>                                                       <span class="ss">:tag_id</span> <span class="o">=&gt;</span> <span class="n">old_tags</span><span class="p">,</span> <span class="ss">:context</span> <span class="o">=&gt;</span> <span class="n">context</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 删除老的taggings</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">old_taggings</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>        <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">destroy_all</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">old_taggings</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:id</span><span class="p">))</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 创建新的taggings包括tagger</span>
</span><span class='line'>      <span class="n">new_tags</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag</span><span class="o">|</span>
</span><span class='line'>        <span class="n">taggings</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">:tag_id</span> <span class="o">=&gt;</span> <span class="n">tag</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">:context</span> <span class="o">=&gt;</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="ss">:tagger</span> <span class="o">=&gt;</span> <span class="n">owner</span><span class="p">,</span> <span class="ss">:taggable</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">owner_tags_on</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span> <span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 查拥有者</span>
</span><span class='line'>  <span class="c1"># 因为base_tags是通过joins来的,所以加个条件taggings.context = ?...</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">owner</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="n">scope</span> <span class="o">=</span> <span class="n">base_tags</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="o">[</span><span class="sx">%(</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="sx">.context = ?)</span><span class="p">,</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">scope</span> <span class="o">=</span> <span class="n">base_tags</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="o">[</span><span class="sx">%(</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="sx">.context = ? AND</span>
</span><span class='line'><span class="sx">                               </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="sx">.tagger_id = ? AND</span>
</span><span class='line'><span class="sx">                               </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="sx">.tagger_type = ?)</span><span class="p">,</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="n">owner</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">owner</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">base_class</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 排序</span>
</span><span class='line'>  <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">preserve_tag_order?</span>
</span><span class='line'>    <span class="n">scope</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.id&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">scope</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>save_owned_tags的方法跟以前的core.rb中的save_tags有些相似,都是通过找taggs表,如果有新的就创建新的tag,然后关联taggings表,删除老的,创建新的,只是不同的是,save_owned_tags多加了tagger的保存,另外,save_owned_tags是在tagging_contexts不为空的情况下才有数据库的操作,也就是说发生在tag方法上,所以它跟core.rb中的save_tags不冲突。</p>

<p>现在来看下tags_from这个方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t1</span><span class="o">.</span><span class="n">tags_from</span><span class="p">(</span><span class="n">u</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;user1&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 重写acts_as_taggable_on</span>
</span><span class='line'><span class="k">def</span> <span class="nf">acts_as_taggable_on</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="n">initialize_acts_as_taggable_on_ownership</span>
</span><span class='line'>  <span class="k">super</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">initialize_acts_as_taggable_on_ownership</span>
</span><span class='line'>  <span class="n">tag_types</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag_type</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">class_eval</span> <span class="o">&lt;&lt;-</span><span class="no">RUBY</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="sh">      # 定义tags_from方法</span>
</span><span class='line'><span class="sh">      def #{tag_type}_from(owner)</span>
</span><span class='line'><span class="sh">        owner_tag_list_on(owner, &#39;#{tag_type}&#39;)</span>
</span><span class='line'><span class="sh">      end</span>
</span><span class='line'><span class="no">    RUBY</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">owner_tag_list_on</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span> <span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="n">add_custom_context</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 从变量取值,没有就为空</span>
</span><span class='line'>  <span class="n">cache</span> <span class="o">=</span> <span class="n">cached_owned_tag_list_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 查topics的base_tags,通过owner和context来关联</span>
</span><span class='line'>  <span class="c1"># 返回的是数组,包含tag的name</span>
</span><span class='line'>  <span class="n">cache</span><span class="o">[</span><span class="n">owner</span><span class="o">]</span> <span class="o">||=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:TagList</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">*</span><span class="n">owner_tags_on</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span> <span class="n">context</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:name</span><span class="p">))</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>t1.reload</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">reload</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 把所有cache变量都清空</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">tag_types</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">context</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">instance_variable_set</span><span class="p">(</span><span class="s2">&quot;@owned_</span><span class="si">#{</span><span class="n">context</span><span class="si">}</span><span class="s2">_list&quot;</span><span class="p">,</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">super</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-taggable-on源码分析(六)]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-6/"/>
    <updated>2014-01-08T09:59:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/08/acts-as-taggable-onyuan-ma-fen-xi-6</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on源码分析(一)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2/">Acts-as-taggable-on源码分析(二)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3/">Acts-as-taggable-on源码分析(三)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-4/">Acts-as-taggable-on源码分析(四)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-5/">Acts-as-taggable-on源码分析(五)</a></li>
</ul>


<p>这节我们来研究Relationships,即是find_related_tags这个方法的原理和用法</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>t1.tag_list =&gt; ["ruby", "rails"]
</span><span class='line'>t2.tag_list =&gt; ["python"]
</span><span class='line'>t3.tag_list =&gt; ["ruby", "rails", "python"]
</span><span class='line'>
</span><span class='line'>t1.find_related_tag =&gt; t3
</span><span class='line'>t2.find_related_tag =&gt; t3
</span><span class='line'>t3.find_related_tag =&gt; t1, t2</span></code></pre></td></tr></table></div></figure>


<p>def find_related_#{tag_type}(options = {})这一行就是find_related_tags的定义之处</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">tag_types</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag_type</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">class_eval</span> <span class="o">&lt;&lt;-</span><span class="no">RUBY</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="sh">    def find_related_#{tag_type}(options = {})</span>
</span><span class='line'><span class="sh">      related_tags_for(&#39;#{tag_type}&#39;, self.class, options)</span>
</span><span class='line'><span class="sh">    end</span>
</span><span class='line'><span class="sh">    alias_method :find_related_on_#{tag_type}, :find_related_#{tag_type}</span>
</span><span class='line'><span class="sh">    ...</span>
</span><span class='line'><span class="no">  RUBY</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>找到related_tags_for方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">related_tags_for</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">klass</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>  <span class="n">tags_to_ignore</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">wrap</span><span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:ignore</span><span class="p">))</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span> <span class="o">||</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">tags_to_find</span> <span class="o">=</span> <span class="n">tags_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span><span class="o">.</span><span class="n">reject</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">tags_to_ignore</span><span class="o">.</span><span class="n">include?</span> <span class="n">t</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 查topics, tags, taggings表,找taggs.name存在于tags_to_find的然后用group by topics.id</span>
</span><span class='line'>  <span class="n">klass</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">klass</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.*, COUNT(</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">primary_key</span><span class="si">}</span><span class="s2">) AS count&quot;</span><span class="p">)</span> <span class="p">\</span>
</span><span class='line'>       <span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">klass</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span> <span class="p">\</span>
</span><span class='line'>       <span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">exclude_self</span><span class="p">(</span><span class="n">klass</span><span class="p">,</span> <span class="nb">id</span><span class="p">)</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">klass</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">klass</span><span class="o">.</span><span class="n">primary_key</span><span class="si">}</span><span class="s2"> = </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_id AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_type = &#39;</span><span class="si">#{</span><span class="n">klass</span><span class="o">.</span><span class="n">base_class</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">&#39; AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id = </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">primary_key</span><span class="si">}</span><span class="s2"> AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.name IN (?)&quot;</span><span class="p">,</span> <span class="n">tags_to_find</span><span class="o">]</span><span class="p">)</span> <span class="p">\</span>
</span><span class='line'>       <span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="n">group_columns</span><span class="p">(</span><span class="n">klass</span><span class="p">))</span> <span class="p">\</span>
</span><span class='line'>       <span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;count DESC&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 不包含自己</span>
</span><span class='line'><span class="k">def</span> <span class="nf">exclude_self</span><span class="p">(</span><span class="n">klass</span><span class="p">,</span> <span class="nb">id</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span><span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">base_class</span><span class="p">,</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">].</span><span class="n">include?</span> <span class="n">klass</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">klass</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">klass</span><span class="o">.</span><span class="n">primary_key</span><span class="si">}</span><span class="s2"> != </span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2"> AND&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>find_related_tags的主要作用就是通过tags.name in &hellip;来查找相关的记录的</p>

<p>其他的几个方法例如find_matching_contexts_for, find_related_tags_for, find_matching_contexts_for可以自己研究</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-taggable-on源码分析(五)]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-5/"/>
    <updated>2014-01-07T20:32:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-5</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on源码分析(一)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2/">Acts-as-taggable-on源码分析(二)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3/">Acts-as-taggable-on源码分析(三)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-4/">Acts-as-taggable-on源码分析(四)</a></li>
</ul>


<p>这节我们来研究Finding Tagged Objects,也就是tagged_with这个方法的原理和使用方法</p>

<!-- more -->


<p><img src="http://yinsigan.github.io/images/acts_as_taggable_on/tagged_with.png"></p>

<p>我们先看tagged_with(&lsquo;ruby, rails&rsquo;)这种最简单的形式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tagged_with</span><span class="p">(</span><span class="n">tags</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>  <span class="c1"># 返回tag_list的数组</span>
</span><span class='line'>  <span class="n">tag_list</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:TagList</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="n">tags</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 返回空的数组</span>
</span><span class='line'>  <span class="n">empty_result</span> <span class="o">=</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;1 = 0&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 如果tag_list为空就返回空的数组</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">empty_result</span> <span class="k">if</span> <span class="n">tag_list</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">joins</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">conditions</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">having</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">select_clause</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">context</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:on</span><span class="p">)</span>
</span><span class='line'>  <span class="n">owned_by</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:owned_by</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 返回表名</span>
</span><span class='line'>  <span class="c1"># Guesses the table name, but does not decorate it with prefix and suffix information.</span>
</span><span class='line'>  <span class="n">alias_base_name</span> <span class="o">=</span> <span class="n">undecorated_table_name</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">,</span><span class="s1">&#39;_&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">quote</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">using_postgresql?</span> <span class="p">?</span> <span class="s1">&#39;&quot;&#39;</span> <span class="p">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:exclude</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:any</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="c1"># 查tags表找到匹配的tag</span>
</span><span class='line'>    <span class="n">tags</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">named_any</span><span class="p">(</span><span class="n">tag_list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 当没有完全匹配时就返回空的数组</span>
</span><span class='line'>    <span class="c1"># 也就是说tag_list中的tag必须存于数据库tags表中的</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">empty_result</span> <span class="k">unless</span> <span class="n">tags</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="n">tag_list</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">tags</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag</span><span class="o">|</span>
</span><span class='line'>      <span class="c1"># 加上表别名</span>
</span><span class='line'>      <span class="n">taggings_alias</span> <span class="o">=</span> <span class="n">adjust_taggings_alias</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">alias_base_name</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">11</span><span class="o">]</span><span class="si">}</span><span class="s2">_taggings_</span><span class="si">#{</span><span class="n">sha_prefix</span><span class="p">(</span><span class="n">tag</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># joins taggings表</span>
</span><span class='line'>      <span class="n">tagging_join</span>  <span class="o">=</span> <span class="s2">&quot;JOIN </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'>                      <span class="s2">&quot;  ON </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.taggable_id = </span><span class="si">#{</span><span class="n">quote</span><span class="si">}#{</span><span class="n">table_name</span><span class="si">}#{</span><span class="n">quote</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">primary_key</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'>                      <span class="s2">&quot; AND </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.taggable_type = </span><span class="si">#{</span><span class="n">quote_value</span><span class="p">(</span><span class="n">base_class</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'>                      <span class="s2">&quot; AND </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.tag_id = </span><span class="si">#{</span><span class="n">tag</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">tagging_join</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; AND &quot;</span> <span class="o">+</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.context = ?&quot;</span><span class="p">,</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">context</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 查看是否有拥有者,即tagger</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">owned_by</span>
</span><span class='line'>          <span class="n">tagging_join</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; AND &quot;</span> <span class="o">+</span>
</span><span class='line'>            <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span>
</span><span class='line'>              <span class="s2">&quot;</span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.tagger_id = ? AND </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.tagger_type = ?&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="n">owned_by</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>              <span class="n">owned_by</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">base_class</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>            <span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">joins</span> <span class="o">&lt;&lt;</span> <span class="n">tagging_join</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">taggings_alias</span><span class="p">,</span> <span class="n">tags_alias</span> <span class="o">=</span> <span class="n">adjust_taggings_alias</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">alias_base_name</span><span class="si">}</span><span class="s2">_taggings_group&quot;</span><span class="p">),</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">alias_base_name</span><span class="si">}</span><span class="s2">_tags_group&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:match_all</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 组合sql语句</span>
</span><span class='line'>  <span class="nb">select</span><span class="p">(</span><span class="n">select_clause</span><span class="p">)</span> <span class="p">\</span>
</span><span class='line'>    <span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="n">joins</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">))</span> <span class="p">\</span>
</span><span class='line'>    <span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">conditions</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; AND &quot;</span><span class="p">))</span> <span class="p">\</span>
</span><span class='line'>    <span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="n">group</span><span class="p">)</span> <span class="p">\</span>
</span><span class='line'>    <span class="o">.</span><span class="n">having</span><span class="p">(</span><span class="n">having</span><span class="p">)</span> <span class="p">\</span>
</span><span class='line'>    <span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:order</span><span class="o">]</span><span class="p">)</span> <span class="p">\</span>
</span><span class='line'>    <span class="o">.</span><span class="n">readonly</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>tagged_with方法主要是通过joins taggings表来查数据,通过taggable_type来关联</p>

<p>现在来看下tagged_with(&lsquo;ruby, rails&rsquo;, :any => true)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">35</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="no">Topic</span><span class="o">.</span><span class="n">tagged_with</span><span class="p">(</span><span class="s1">&#39;ruby, rails&#39;</span><span class="p">,</span> <span class="ss">:any</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="sb">`tags`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`tags`</span> <span class="no">WHERE</span> <span class="p">(</span><span class="n">lower</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span> <span class="o">=</span> <span class="s1">&#39;ruby&#39;</span> <span class="no">OR</span> <span class="n">lower</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span> <span class="o">=</span> <span class="s1">&#39;rails&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Topic</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">38</span><span class="o">.</span><span class="mi">0</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="no">DISTINCT</span> <span class="n">topics</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`topics`</span> <span class="no">JOIN</span> <span class="n">taggings</span> <span class="n">topic_taggings_047dc82</span> <span class="no">ON</span> <span class="n">topic_taggings_047dc82</span><span class="o">.</span><span class="n">taggable_id</span> <span class="o">=</span> <span class="n">topics</span><span class="o">.</span><span class="n">id</span> <span class="no">AND</span> <span class="n">topic_taggings_047dc82</span><span class="o">.</span><span class="n">taggable_type</span> <span class="o">=</span> <span class="s1">&#39;Topic&#39;</span> <span class="no">WHERE</span> <span class="p">(</span><span class="n">topic_taggings_047dc82</span><span class="o">.</span><span class="n">tag_id</span> <span class="o">=</span> <span class="mi">16</span> <span class="no">OR</span> <span class="n">topic_taggings_047dc82</span><span class="o">.</span><span class="n">tag_id</span> <span class="o">=</span> <span class="mi">17</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="c1">#&lt;Topic id: 4, title: nil, created_at: &quot;2014-01-06 01:48:27&quot;, updated_at: &quot;2014-01-06 01:48:49&quot;&gt;]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:exclude</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:any</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># get tags, drop out if nothing returned (we need at least one)</span>
</span><span class='line'>  <span class="n">tags</span> <span class="o">=</span> <span class="k">if</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:wild</span><span class="p">)</span>
</span><span class='line'>    <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">named_like_any</span><span class="p">(</span><span class="n">tag_list</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="c1"># named_any是通过where or条件来查找表的</span>
</span><span class='line'>    <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">named_any</span><span class="p">(</span><span class="n">tag_list</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 如果一个都没查到就返回空数组</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">empty_result</span> <span class="k">unless</span> <span class="n">tags</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 没有传:on参数的话,taggings_context就为空字符串</span>
</span><span class='line'>  <span class="n">taggings_context</span> <span class="o">=</span> <span class="n">context</span> <span class="p">?</span> <span class="s2">&quot;_</span><span class="si">#{</span><span class="n">context</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 给tagings表加上表别名</span>
</span><span class='line'>  <span class="n">taggings_alias</span>   <span class="o">=</span> <span class="n">adjust_taggings_alias</span><span class="p">(</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">alias_base_name</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">4</span><span class="o">]</span><span class="si">}#{</span><span class="n">taggings_context</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">6</span><span class="o">]</span><span class="si">}</span><span class="s2">_taggings_</span><span class="si">#{</span><span class="n">sha_prefix</span><span class="p">(</span><span class="n">tags</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:name</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">))</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># joins taggings表的条件</span>
</span><span class='line'>  <span class="n">tagging_join</span>  <span class="o">=</span> <span class="s2">&quot;JOIN </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'>                  <span class="s2">&quot;  ON </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.taggable_id = </span><span class="si">#{</span><span class="n">quote</span><span class="si">}#{</span><span class="n">table_name</span><span class="si">}#{</span><span class="n">quote</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">primary_key</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'>                  <span class="s2">&quot; AND </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.taggable_type = </span><span class="si">#{</span><span class="n">quote_value</span><span class="p">(</span><span class="n">base_class</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">tagging_join</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; AND &quot;</span> <span class="o">+</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.context = ?&quot;</span><span class="p">,</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">context</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># joins taggings表之后给个条件,只要taggings表的tag_id匹配的就行</span>
</span><span class='line'>  <span class="n">conditions</span> <span class="o">&lt;&lt;</span> <span class="n">tags</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.tag_id = </span><span class="si">#{</span><span class="n">t</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; OR &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">select_clause</span> <span class="o">=</span> <span class="s2">&quot;DISTINCT </span><span class="si">#{</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.*&quot;</span> <span class="k">unless</span> <span class="n">context</span> <span class="ow">and</span> <span class="n">tag_types</span><span class="o">.</span><span class="n">one?</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">owned_by</span>
</span><span class='line'>      <span class="n">tagging_join</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; AND &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span>
</span><span class='line'>              <span class="s2">&quot;</span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.tagger_id = ? AND </span><span class="si">#{</span><span class="n">taggings_alias</span><span class="si">}</span><span class="s2">.tagger_type = ?&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="n">owned_by</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>              <span class="n">owned_by</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">base_class</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>          <span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">joins</span> <span class="o">&lt;&lt;</span> <span class="n">tagging_join</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>tagged_with(&lsquo;ruby, rails&rsquo;, :any => true)的原理是这样的,先通过named_any查tags，传进来的tag_list只有有的就返回,然后去joins taggings表,joins的条件为taggings.taggable_id = topics.id, taggings.taggable_type = &lsquo;Topic&rsquo;,然后给这个joins传一个条件,就是taggings.tag_id是named_any查了之后存在的</p>

<p>现在来看下tagged_with(&lsquo;ruby&rsquo;, :exclude => true)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">6</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="no">Topic</span><span class="o">.</span><span class="n">tagged_with</span><span class="p">(</span><span class="s1">&#39;ruby&#39;</span><span class="p">,</span> <span class="ss">:exclude</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Topic</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="sb">`topics`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`topics`</span> <span class="no">WHERE</span> <span class="p">(</span><span class="n">topics</span><span class="o">.</span><span class="n">id</span> <span class="no">NOT</span> <span class="no">IN</span> <span class="p">(</span><span class="no">SELECT</span> <span class="n">taggings</span><span class="o">.</span><span class="n">taggable_id</span> <span class="no">FROM</span> <span class="n">taggings</span> <span class="no">JOIN</span> <span class="n">tags</span> <span class="no">ON</span> <span class="n">taggings</span><span class="o">.</span><span class="n">tag_id</span> <span class="o">=</span> <span class="n">tags</span><span class="o">.</span><span class="n">id</span> <span class="no">AND</span> <span class="p">(</span><span class="n">tags</span><span class="o">.</span><span class="n">name</span> <span class="no">LIKE</span> <span class="s1">&#39;ruby&#39;</span><span class="p">)</span> <span class="no">WHERE</span> <span class="n">taggings</span><span class="o">.</span><span class="n">taggable_type</span> <span class="o">=</span> <span class="s1">&#39;Topic&#39;</span><span class="p">))</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="c1">#&lt;Topic id: 5, title: &quot;22222sss&quot;, created_at: &quot;2014-01-06 15:02:15&quot;, updated_at: &quot;2014-01-06 15:03:03&quot;&gt;]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:exclude</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:wild</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 用模糊匹配</span>
</span><span class='line'>    <span class="n">tags_conditions</span> <span class="o">=</span> <span class="n">tag_list</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.name </span><span class="si">#{</span><span class="n">like_operator</span><span class="si">}</span><span class="s2"> ? ESCAPE &#39;!&#39;&quot;</span><span class="p">,</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">escape_like</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="si">}</span><span class="s2">%&quot;</span><span class="o">]</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; OR &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="c1"># 查找tags表</span>
</span><span class='line'>    <span class="n">tags_conditions</span> <span class="o">=</span> <span class="n">tag_list</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.name </span><span class="si">#{</span><span class="n">like_operator</span><span class="si">}</span><span class="s2"> ?&quot;</span><span class="p">,</span> <span class="n">t</span><span class="o">]</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; OR &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 关键语句,先查taggings表,taggings表 joins tags表,再用上面查找tags表的结果进行关联,而选择的数据则是topics.id不在taggings.taggable_id中的</span>
</span><span class='line'>  <span class="n">conditions</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">primary_key</span><span class="si">}</span><span class="s2"> NOT IN (SELECT </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_id FROM </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2"> JOIN </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2"> ON </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tag_id = </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">primary_key</span><span class="si">}</span><span class="s2"> AND (</span><span class="si">#{</span><span class="n">tags_conditions</span><span class="si">}</span><span class="s2">) WHERE </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_type = </span><span class="si">#{</span><span class="n">quote_value</span><span class="p">(</span><span class="n">base_class</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="si">}</span><span class="s2">)&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 查找拥有者</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">owned_by</span>
</span><span class='line'>    <span class="n">joins</span> <span class="o">&lt;&lt;</span>  <span class="s2">&quot;JOIN </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s2">&quot;  ON </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_id = </span><span class="si">#{</span><span class="n">quote</span><span class="si">}#{</span><span class="n">table_name</span><span class="si">}#{</span><span class="n">quote</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">primary_key</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>              <span class="s2">&quot; AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.taggable_type = </span><span class="si">#{</span><span class="n">quote_value</span><span class="p">(</span><span class="n">base_class</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s2">&quot; AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tagger_id = </span><span class="si">#{</span><span class="n">owned_by</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s2">&quot; AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tagger_type = </span><span class="si">#{</span><span class="n">quote_value</span><span class="p">(</span><span class="n">owned_by</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">base_class</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:any</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>关键语句在select topics.id not in &hellip;这一行</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-taggable-on源码分析(四)]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-4/"/>
    <updated>2014-01-07T15:11:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/07/acts-as-taggable-onyuan-ma-fen-xi-4</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on源码分析(一)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2/">Acts-as-taggable-on源码分析(二)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3/">Acts-as-taggable-on源码分析(三)</a></li>
</ul>


<p>这一节我们继续来研究tag_list,tag_list.add,tag_list.remove这些方法用法和原理</p>

<p>core.rb文件定义了tag_list,虽然不是直接定义</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 当ActsAsTaggableOn::Taggable::Core被included时就会执行这个方法</span>
</span><span class='line'><span class="n">base</span><span class="o">.</span><span class="n">initialize_acts_as_taggable_on_core</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">initialize_acts_as_taggable_on_core</span>
</span><span class='line'>  <span class="c1"># taggable_mixin是一个动态创建的module</span>
</span><span class='line'>  <span class="kp">include</span> <span class="n">taggable_mixin</span>
</span><span class='line'>  <span class="n">tag_types</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tags_type</span><span class="o">|</span>
</span><span class='line'>    <span class="c1"># 转成单数</span>
</span><span class='line'>    <span class="n">tag_type</span>         <span class="o">=</span> <span class="n">tags_type</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">singularize</span>
</span><span class='line'>    <span class="c1"># 可能会输出类似:tag_taggings这样的东西</span>
</span><span class='line'>    <span class="n">context_taggings</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">tag_type</span><span class="si">}</span><span class="s2">_taggings&quot;</span><span class="o">.</span><span class="n">to_sym</span>
</span><span class='line'>    <span class="c1"># 可能会输出类似:tags这样的东西</span>
</span><span class='line'>    <span class="n">context_tags</span>     <span class="o">=</span> <span class="n">tags_type</span><span class="o">.</span><span class="n">to_sym</span>
</span><span class='line'>    <span class="c1"># 按照taggings表的id排序</span>
</span><span class='line'>    <span class="n">taggings_order</span>   <span class="o">=</span> <span class="p">(</span><span class="n">preserve_tag_order?</span> <span class="p">?</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.id&quot;</span> <span class="p">:</span> <span class="o">[]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">class_eval</span> <span class="k">do</span>
</span><span class='line'>      <span class="c1"># has_many_with_compatibility是has_many修改之后的</span>
</span><span class='line'>      <span class="c1"># topic has_many tag_taggings</span>
</span><span class='line'>      <span class="n">has_many_with_compatibility</span> <span class="n">context_taggings</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:taggable</span><span class="p">,</span>
</span><span class='line'>                                  <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:destroy</span><span class="p">,</span>
</span><span class='line'>                                  <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tagging&quot;</span><span class="p">,</span>
</span><span class='line'>                                  <span class="ss">:order</span> <span class="o">=&gt;</span> <span class="n">taggings_order</span><span class="p">,</span>
</span><span class='line'>                                  <span class="ss">:conditions</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.context = (?)&quot;</span><span class="p">,</span> <span class="n">tags_type</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>                                  <span class="ss">:include</span> <span class="o">=&gt;</span> <span class="ss">:tag</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># topic has_many tags</span>
</span><span class='line'>      <span class="n">has_many_with_compatibility</span> <span class="n">context_tags</span><span class="p">,</span> <span class="ss">:through</span> <span class="o">=&gt;</span> <span class="n">context_taggings</span><span class="p">,</span>
</span><span class='line'>                                  <span class="ss">:source</span> <span class="o">=&gt;</span> <span class="ss">:tag</span><span class="p">,</span>
</span><span class='line'>                                  <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tag&quot;</span><span class="p">,</span>
</span><span class='line'>                                  <span class="ss">:order</span> <span class="o">=&gt;</span> <span class="n">taggings_order</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">taggable_mixin</span><span class="o">.</span><span class="n">class_eval</span> <span class="o">&lt;&lt;-</span><span class="no">RUBY</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="sh">      def #{tag_type}_list</span>
</span><span class='line'><span class="sh">        tag_list_on(&#39;#{tags_type}&#39;)</span>
</span><span class='line'><span class="sh">      end</span>
</span><span class='line'>
</span><span class='line'><span class="sh">      def #{tag_type}_list=(new_tags)</span>
</span><span class='line'><span class="sh">        set_tag_list_on(&#39;#{tags_type}&#39;, new_tags)</span>
</span><span class='line'><span class="sh">      end</span>
</span><span class='line'>
</span><span class='line'><span class="sh">      def all_#{tags_type}_list</span>
</span><span class='line'><span class="sh">        all_tags_list_on(&#39;#{tags_type}&#39;)</span>
</span><span class='line'><span class="sh">      end</span>
</span><span class='line'><span class="no">    RUBY</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">taggable_mixin</span>
</span><span class='line'>  <span class="vi">@taggable_mixin</span> <span class="o">||=</span> <span class="no">Module</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>{tag_type}_list会被代替成tag_list</p>

<p>现在要看的是tag_list_on还有set_tag_list_on这两个方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tag_list_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 把类似tags,skills这类的东西添加到custom_contexts</span>
</span><span class='line'>  <span class="n">add_custom_context</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tag_list_cache_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 把类似tags,skills这类的东西添加到custom_contexts</span>
</span><span class='line'><span class="k">def</span> <span class="nf">add_custom_context</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>  <span class="n">custom_contexts</span> <span class="o">&lt;&lt;</span> <span class="n">value</span><span class="o">.</span><span class="n">to_s</span> <span class="k">unless</span> <span class="n">custom_contexts</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">value</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">tag_types</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">value</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="kp">attr_writer</span> <span class="ss">:custom_contexts</span>
</span><span class='line'><span class="k">def</span> <span class="nf">custom_contexts</span>
</span><span class='line'>  <span class="vi">@custom_contexts</span> <span class="o">||=</span> <span class="o">[]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">tag_list_cache_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># variable_name可能会等于@tag_list这样的东西</span>
</span><span class='line'>  <span class="n">variable_name</span> <span class="o">=</span> <span class="s2">&quot;@</span><span class="si">#{</span><span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">singularize</span><span class="si">}</span><span class="s2">_list&quot;</span>
</span><span class='line'>  <span class="c1"># 如果已经定义了@tag_list这个变量,并且有值存在,这返回它</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">instance_variable_get</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span> <span class="k">if</span> <span class="n">instance_variable_defined?</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">instance_variable_get</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 没有的话就给@tag_list设值</span>
</span><span class='line'>  <span class="nb">instance_variable_set</span><span class="p">(</span><span class="n">variable_name</span><span class="p">,</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:TagList</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">tags_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:name</span><span class="p">)))</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>来看ActsAsTaggableOn::TagList这个模块</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/core_ext/module/delegation&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">ActsAsTaggableOn</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">TagList</span> <span class="o">&lt;</span> <span class="nb">Array</span>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:owner</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 初始化方法,ActsAsTaggableOn::TagList.new执行的</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>      <span class="n">add</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 从字符中近回一个新的数组,例如&quot;rails, ruby&quot; =&gt; [&#39;rails&#39;, &#39;ruby&#39;]</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">from</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># ActsAsTaggableOn.glue可能会是&#39;, &#39;,字符串没有join方法</span>
</span><span class='line'>      <span class="n">string</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">ActsAsTaggableOn</span><span class="o">.</span><span class="n">glue</span><span class="p">)</span> <span class="k">if</span> <span class="n">string</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:join</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># tap会处理tag_list然后把它返回</span>
</span><span class='line'>      <span class="kp">new</span><span class="o">.</span><span class="n">tap</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag_list</span><span class="o">|</span>
</span><span class='line'>        <span class="c1"># 复制一份</span>
</span><span class='line'>        <span class="n">string</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">dup</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># 可能会是&quot;,&quot;</span>
</span><span class='line'>        <span class="c1"># 这一段代码的意思就是把类似&quot;rails, ruby&quot;用正则分析之后再用split变成数组给add方法处理</span>
</span><span class='line'>        <span class="n">d</span> <span class="o">=</span> <span class="no">ActsAsTaggableOn</span><span class="o">.</span><span class="n">delimiter</span>
</span><span class='line'>        <span class="n">d</span> <span class="o">=</span> <span class="n">d</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">d</span><span class="o">.</span><span class="n">kind_of?</span><span class="p">(</span><span class="nb">Array</span><span class="p">)</span>
</span><span class='line'>        <span class="n">string</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/(\A|</span><span class="si">#{</span><span class="n">d</span><span class="si">}</span><span class="sr">)\s*&quot;(.*?)&quot;\s*(</span><span class="si">#{</span><span class="n">d</span><span class="si">}</span><span class="sr">\s*|\z)/</span><span class="p">)</span> <span class="p">{</span> <span class="n">tag_list</span> <span class="o">&lt;&lt;</span> <span class="vg">$2</span><span class="p">;</span> <span class="vg">$3</span> <span class="p">}</span>
</span><span class='line'>        <span class="n">string</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/(\A|</span><span class="si">#{</span><span class="n">d</span><span class="si">}</span><span class="sr">)\s*&#39;(.*?)&#39;\s*(</span><span class="si">#{</span><span class="n">d</span><span class="si">}</span><span class="sr">\s*|\z)/</span><span class="p">)</span> <span class="p">{</span> <span class="n">tag_list</span> <span class="o">&lt;&lt;</span> <span class="vg">$2</span><span class="p">;</span> <span class="vg">$3</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tag_list</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">string</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="no">Regexp</span><span class="o">.</span><span class="n">new</span> <span class="n">d</span><span class="p">))</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 添加tag</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="o">*</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># 这个方法在后面定义,这个主要是对复杂的参数进行处理和解析,如果是一般简单的参数直接返回</span>
</span><span class='line'>      <span class="n">extract_and_apply_options!</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># 加上原先的</span>
</span><span class='line'>      <span class="n">concat</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'>      <span class="n">clean!</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 删除tag</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">remove</span><span class="p">(</span><span class="o">*</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'>      <span class="n">extract_and_apply_options!</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># name存在才删除</span>
</span><span class='line'>      <span class="n">delete_if</span> <span class="p">{</span> <span class="o">|</span><span class="nb">name</span><span class="o">|</span> <span class="n">names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 转成字符串输出</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>      <span class="c1"># 锁住就复制一份,否则返回自身</span>
</span><span class='line'>      <span class="n">tags</span> <span class="o">=</span> <span class="nb">frozen?</span> <span class="p">?</span> <span class="nb">self</span><span class="o">.</span><span class="n">dup</span> <span class="p">:</span> <span class="nb">self</span>
</span><span class='line'>      <span class="c1"># 去掉空白、重复、为空的情况</span>
</span><span class='line'>      <span class="n">tags</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:clean!</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">tags</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="o">|</span>
</span><span class='line'>        <span class="n">d</span> <span class="o">=</span> <span class="no">ActsAsTaggableOn</span><span class="o">.</span><span class="n">delimiter</span>
</span><span class='line'>        <span class="n">d</span> <span class="o">=</span> <span class="no">Regexp</span><span class="o">.</span><span class="n">new</span> <span class="n">d</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">d</span><span class="o">.</span><span class="n">kind_of?</span> <span class="nb">Array</span>
</span><span class='line'>        <span class="nb">name</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">d</span><span class="p">)</span> <span class="p">?</span> <span class="s2">&quot;</span><span class="se">\&quot;</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span> <span class="p">:</span> <span class="nb">name</span>
</span><span class='line'>      <span class="k">end</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">ActsAsTaggableOn</span><span class="o">.</span><span class="n">glue</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 去掉空白、重复、为空的情况</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">clean!</span>
</span><span class='line'>      <span class="c1"># 去掉空的</span>
</span><span class='line'>      <span class="n">reject!</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:blank?</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># 去掉左右边界的留空</span>
</span><span class='line'>      <span class="n">map!</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:strip</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># 如果要小写就转成小写字母</span>
</span><span class='line'>      <span class="n">map!</span><span class="p">{</span> <span class="o">|</span><span class="n">tag</span><span class="o">|</span> <span class="n">tag</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">to_s</span> <span class="p">}</span> <span class="k">if</span> <span class="no">ActsAsTaggableOn</span><span class="o">.</span><span class="n">force_lowercase</span>
</span><span class='line'>      <span class="n">map!</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:parameterize</span><span class="p">)</span> <span class="k">if</span> <span class="no">ActsAsTaggableOn</span><span class="o">.</span><span class="n">force_parameterize</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 保证唯一</span>
</span><span class='line'>      <span class="n">uniq!</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">extract_and_apply_options!</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># 判断最后一个参数是不是数组,如果是的话就弹出来,否则返回一个空的hash</span>
</span><span class='line'>      <span class="c1"># 在处理这样的参数传递会用到tag_list.add(&quot;Fun, Happy&quot;, :parse =&gt; true)</span>
</span><span class='line'>      <span class="n">options</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Hash</span><span class="p">)</span> <span class="p">?</span> <span class="n">args</span><span class="o">.</span><span class="n">pop</span> <span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>      <span class="c1"># 如果key不是:parse会抛出异常</span>
</span><span class='line'>      <span class="n">options</span><span class="o">.</span><span class="n">assert_valid_keys</span> <span class="ss">:parse</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 如果parse等于true,相当于传了&quot;Fun, Happy&quot;, :parse =&gt; true这样的参数</span>
</span><span class='line'>      <span class="c1"># 这个时候会把&quot;Fun, Happy&quot;送给from处理,也就是解析字符串以数组返回</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:parse</span><span class="o">]</span>
</span><span class='line'>        <span class="n">args</span><span class="o">.</span><span class="n">map!</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 不存在parse参数,如果是这样的参数&quot;Fun&quot;, &quot;Happy&quot;,直接返回就行了</span>
</span><span class='line'>      <span class="n">args</span><span class="o">.</span><span class="n">flatten!</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ActsAsTaggableOn::Tagging本身继承自Array,from方法是解决字符串参数转成数组,add是添加tag，以数组形式返回,remove是移除tag,clean会清除数组中一些空的,重复的元素,to_s是把数组以字符串的形式返回</p>

<p>tag_list这个方法有一个cache的效果,具体体现在它会通过@tag_list来存储值,没有的话才找数据库的</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-taggable-on源码分析(三)]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3/"/>
    <updated>2014-01-06T09:38:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on源码分析(一)</a></li>
<li><a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2/">Acts-as-taggable-on源码分析(二)</a></li>
</ul>


<p>这节我们来使用acts_as_taggable这个方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Topic</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">acts_as_taggable</span> <span class="c1"># Alias for acts_as_taggable_on :tags</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="no">Topic</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">tag_list</span> <span class="o">=</span> <span class="s1">&#39;ruby, rails&#39;</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">save</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://yinsigan.github.io/images/acts_as_taggable_on/acts_as_taggable.png"></p>

<p>先来看看acts_as_taggable到底做了什么</p>

<p>它定义在taggable.rb文件中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">acts_as_taggable</span>
</span><span class='line'>  <span class="n">acts_as_taggable_on</span> <span class="ss">:tags</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>继续看acts_as_taggable_on是什么</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">acts_as_taggable_on</span><span class="p">(</span><span class="o">*</span><span class="n">tag_types</span><span class="p">)</span>
</span><span class='line'>  <span class="n">taggable_on</span><span class="p">(</span><span class="kp">false</span><span class="p">,</span> <span class="n">tag_types</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>来到taggable_on</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">taggable_on</span><span class="p">(</span><span class="n">preserve_tag_order</span><span class="p">,</span> <span class="o">*</span><span class="n">tag_types</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 把所有种类的标签打成symbol</span>
</span><span class='line'>  <span class="n">tag_types</span> <span class="o">=</span> <span class="n">tag_types</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">compact</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_sym</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 如果已经用过taggable_on方法,也就是打过标签了,taggable_on会动态修改taggable?方法的定义,而它的值将由false被修改成true</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">taggable?</span>
</span><span class='line'>    <span class="c1"># 数组加法</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">tag_types</span> <span class="o">=</span> <span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">tag_types</span> <span class="o">+</span> <span class="n">tag_types</span><span class="p">)</span><span class="o">.</span><span class="n">uniq</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">preserve_tag_order</span> <span class="o">=</span> <span class="n">preserve_tag_order</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="c1"># 只属于类</span>
</span><span class='line'>    <span class="n">class_attribute</span> <span class="ss">:tag_types</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">tag_types</span> <span class="o">=</span> <span class="n">tag_types</span>
</span><span class='line'>    <span class="n">class_attribute</span> <span class="ss">:preserve_tag_order</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">preserve_tag_order</span> <span class="o">=</span> <span class="n">preserve_tag_order</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">class_eval</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">has_many</span> <span class="ss">:taggings</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:taggable</span><span class="p">,</span> <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tagging&quot;</span>
</span><span class='line'>      <span class="n">has_many</span> <span class="ss">:base_tags</span><span class="p">,</span> <span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:taggings</span><span class="p">,</span> <span class="ss">:source</span> <span class="o">=&gt;</span> <span class="ss">:tag</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tag&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 动态更改了taggable?方法的定义</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">taggable?</span>
</span><span class='line'>        <span class="kp">true</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Utils</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># each of these add context-specific methods and must be</span>
</span><span class='line'>  <span class="c1"># called on each call of taggable_on</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Core</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Collection</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Cache</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Ownership</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Related</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Dirty</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过分析acts_as_taggable的方法定义,并没有找到实际的关于保存之后修改tags表和taggings表的语句。</p>

<p>按照我们的猜测如果要实现上述类似的功能,必须要定义一个callback,可以叫before_save或before_save</p>

<p>到底是before_save还是after_save呢</p>

<p>是after_save,为什么,因为你看上面那个图就知道,修改那两个表都是在更变topics表的updated_at之后才发生的,所以是after_save</p>

<p>我们来找这个方法,只能在剩下的几个include语句里下功夫了</p>

<p>我们只能一个一个翻,好运的是include ActsAsTaggableOn::Taggable::Core引用的lib/acts_as_taggable/core.rb文件就定义了这样的after_save</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">after_save</span> <span class="ss">:save_tags</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">save_tags</span>
</span><span class='line'>  <span class="n">tagging_contexts</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">context</span><span class="o">|</span>
</span><span class='line'>    <span class="c1"># 如果当前记录(topic)没有类似tag_list这样的方法就退出</span>
</span><span class='line'>    <span class="k">next</span> <span class="k">unless</span> <span class="n">tag_list_cache_set_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 返回当前记录相关tags的tag_list变量的值</span>
</span><span class='line'>    <span class="n">tag_list</span> <span class="o">=</span> <span class="n">tag_list_cache_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span><span class="o">.</span><span class="n">uniq</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 处理tags表,通过tag_list看是否有存在相同的tag,有的话就返回,没有就创建一个</span>
</span><span class='line'>    <span class="n">tags</span> <span class="o">=</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">.</span><span class="n">find_or_create_all_with_like_by_name</span><span class="p">(</span><span class="n">tag_list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 查当前记录已经存在数据中的tag</span>
</span><span class='line'>    <span class="n">current_tags</span> <span class="o">=</span> <span class="n">tags_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Tag maintenance based on whether preserving the created order of tags</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">preserve_tag_order?</span>
</span><span class='line'>      <span class="n">old_tags</span><span class="p">,</span> <span class="n">new_tags</span> <span class="o">=</span> <span class="n">current_tags</span> <span class="o">-</span> <span class="n">tags</span><span class="p">,</span> <span class="n">tags</span> <span class="o">-</span> <span class="n">current_tags</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">shared_tags</span> <span class="o">=</span> <span class="n">current_tags</span> <span class="o">&amp;</span> <span class="n">tags</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="n">shared_tags</span><span class="o">.</span><span class="n">any?</span> <span class="o">&amp;&amp;</span> <span class="n">tags</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">shared_tags</span><span class="o">.</span><span class="n">size</span><span class="o">]</span> <span class="o">!=</span> <span class="n">shared_tags</span>
</span><span class='line'>        <span class="n">index</span> <span class="o">=</span> <span class="n">shared_tags</span><span class="o">.</span><span class="n">each_with_index</span> <span class="p">{</span> <span class="o">|</span><span class="n">_</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span> <span class="k">break</span> <span class="n">i</span> <span class="k">unless</span> <span class="n">shared_tags</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="n">tags</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># Update arrays of tag objects</span>
</span><span class='line'>        <span class="n">old_tags</span> <span class="o">|=</span> <span class="n">current_tags</span><span class="o">[</span><span class="n">index</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">current_tags</span><span class="o">.</span><span class="n">size</span><span class="o">]</span>
</span><span class='line'>        <span class="n">new_tags</span> <span class="o">|=</span> <span class="n">current_tags</span><span class="o">[</span><span class="n">index</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">current_tags</span><span class="o">.</span><span class="n">size</span><span class="o">]</span> <span class="o">&amp;</span> <span class="n">shared_tags</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># Order the array of tag objects to match the tag list</span>
</span><span class='line'>        <span class="n">new_tags</span> <span class="o">=</span> <span class="n">tags</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>          <span class="n">new_tags</span><span class="o">.</span><span class="n">find</span> <span class="p">{</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span> <span class="o">==</span> <span class="n">t</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">end</span><span class="o">.</span><span class="n">compact</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># current_tags是当前记录在数据库有的tag, tags是新的tag</span>
</span><span class='line'>      <span class="c1"># 所以old_tags是老的tag</span>
</span><span class='line'>      <span class="c1"># new_tags是新的</span>
</span><span class='line'>      <span class="c1"># 大家可以动手找几个数组试验一下结果</span>
</span><span class='line'>      <span class="n">old_tags</span> <span class="o">=</span> <span class="n">current_tags</span> <span class="o">-</span> <span class="n">tags</span>
</span><span class='line'>      <span class="n">new_tags</span> <span class="o">=</span> <span class="n">tags</span> <span class="o">-</span> <span class="n">current_tags</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 查taggings表,准备删除老的taggings记录</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">old_tags</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>      <span class="n">old_taggings</span> <span class="o">=</span> <span class="n">taggings</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:tagger_type</span> <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">:tagger_id</span> <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">:context</span> <span class="o">=&gt;</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="ss">:tag_id</span> <span class="o">=&gt;</span> <span class="n">old_tags</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 删除老的taggings记录</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">old_taggings</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>      <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">destroy_all</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">primary_key</span><span class="si">}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">to_sym</span> <span class="o">=&gt;</span> <span class="n">old_taggings</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:id</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 创建新的taggings记录</span>
</span><span class='line'>    <span class="n">new_tags</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag</span><span class="o">|</span>
</span><span class='line'>      <span class="n">taggings</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">:tag_id</span> <span class="o">=&gt;</span> <span class="n">tag</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">:context</span> <span class="o">=&gt;</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="ss">:taggable</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们把所有相关的方法找出来一个个来看</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tagging_contexts</span>
</span><span class='line'>  <span class="n">custom_contexts</span> <span class="o">+</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">tag_types</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="kp">attr_writer</span> <span class="ss">:custom_contexts</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">custom_contexts</span>
</span><span class='line'>  <span class="vi">@custom_contexts</span> <span class="o">||=</span> <span class="o">[]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 判断是否定义了类似tag_list这样的实例变量而且它的值不能为nil</span>
</span><span class='line'><span class="k">def</span> <span class="nf">tag_list_cache_set_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="n">variable_name</span> <span class="o">=</span> <span class="s2">&quot;@</span><span class="si">#{</span><span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">singularize</span><span class="si">}</span><span class="s2">_list&quot;</span>
</span><span class='line'>  <span class="n">instance_variable_defined?</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nb">instance_variable_get</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 如果类似tag_list这样的实例变量的值存在而不为nil,就返回</span>
</span><span class='line'><span class="k">def</span> <span class="nf">tag_list_cache_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="n">variable_name</span> <span class="o">=</span> <span class="s2">&quot;@</span><span class="si">#{</span><span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">singularize</span><span class="si">}</span><span class="s2">_list&quot;</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">instance_variable_get</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span> <span class="k">if</span> <span class="n">instance_variable_defined?</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">instance_variable_get</span><span class="p">(</span><span class="n">variable_name</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># tags_on(context).map(&amp;name)查的是tags表,返回当前记录(topic)相关context(tags)的base_tags的所有name</span>
</span><span class='line'>  <span class="nb">instance_variable_set</span><span class="p">(</span><span class="n">variable_name</span><span class="p">,</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:TagList</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">tags_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:name</span><span class="p">)))</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 主要是一个where语句,关联(join)taggings表的context字段,查tags表</span>
</span><span class='line'><span class="k">def</span> <span class="nf">tags_on</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># topics has_many base_tags,acts_as_taggable定义的</span>
</span><span class='line'>  <span class="c1"># 关联taggins表,看它的context是否等于类似tags而且它的tagger_id不能为NULL</span>
</span><span class='line'>  <span class="n">scope</span> <span class="o">=</span> <span class="n">base_tags</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.context = ? AND </span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.tagger_id IS NULL&quot;</span><span class="p">,</span> <span class="n">context</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># 如果preserve_tag_order等于true根据taggings表的id来排序</span>
</span><span class='line'>  <span class="n">scope</span> <span class="o">=</span> <span class="n">scope</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Tagging</span><span class="o">.</span><span class="n">table_name</span><span class="si">}</span><span class="s2">.id&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">preserve_tag_order?</span>
</span><span class='line'>  <span class="n">scope</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_or_create_all_with_like_by_name</span><span class="p">(</span><span class="o">*</span><span class="n">list</span><span class="p">)</span>
</span><span class='line'>  <span class="n">list</span> <span class="o">=</span> <span class="o">[</span><span class="n">list</span><span class="o">].</span><span class="n">flatten</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="o">[]</span> <span class="k">if</span> <span class="n">list</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 查tags表是否已经有tag了</span>
</span><span class='line'>  <span class="n">existing_tags</span> <span class="o">=</span> <span class="no">Tag</span><span class="o">.</span><span class="n">named_any</span><span class="p">(</span><span class="n">list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">list</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag_name</span><span class="o">|</span>
</span><span class='line'>    <span class="c1"># 把tag_name转成小写的</span>
</span><span class='line'>    <span class="n">comparable_tag_name</span> <span class="o">=</span> <span class="n">comparable_name</span><span class="p">(</span><span class="n">tag_name</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># 发现tags表已经有了就返回</span>
</span><span class='line'>    <span class="n">existing_tag</span> <span class="o">=</span> <span class="n">existing_tags</span><span class="o">.</span><span class="n">find</span> <span class="p">{</span> <span class="o">|</span><span class="n">tag</span><span class="o">|</span> <span class="n">comparable_name</span><span class="p">(</span><span class="n">tag</span><span class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="o">==</span> <span class="n">comparable_tag_name</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 没有的就创建一个tag</span>
</span><span class='line'>    <span class="n">existing_tag</span> <span class="o">||</span> <span class="no">Tag</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="n">tag_name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 查tags表返回数组</span>
</span><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">named_any</span><span class="p">(</span><span class="n">list</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="no">ActsAsTaggableOn</span><span class="o">.</span><span class="n">strict_case_match</span>
</span><span class='line'>    <span class="n">where</span><span class="p">(</span><span class="n">list</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">tag</span><span class="o">|</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;name = </span><span class="si">#{</span><span class="n">binary</span><span class="si">}</span><span class="s2">?&quot;</span><span class="p">,</span> <span class="n">tag</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">]</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; OR &quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">where</span><span class="p">(</span><span class="n">list</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">tag</span><span class="o">|</span> <span class="n">sanitize_sql</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;lower(name) = ?&quot;</span><span class="p">,</span> <span class="n">tag</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">downcase</span><span class="o">]</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; OR &quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">comparable_name</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="n">str</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>tag_list_cache_on和tag_list_cache_set_on跟tag_list变量有关,跟cache有关,它们都是实例方法,可以用类似t.tag_list_cache_set_on(&lsquo;tags&rsquo;)来调用,可以试下效果</p>

<p>tags_on也是个实例方法,它查找tags表,返回当前记录(topic)的base_tags</p>

<p>关于tag_list和ActsAsTaggableOn::Tagging.table_name后绪会说</p>

<p>总结save_tags的作用,首先是检查tag_list变量的值,先把它的值保存起来,它是的新的tag的列表,然后通过这个tag_list去查数据库中的tags表,如果已经有了相同的name的tag就跳过,如果没有就创建,先把tags表创建好,接着来处理taggings表,首先求当前记录在数据库的tag表相关的记录,通过数组的运算来求出新的tags和老的tags,然后把老的taggings相关的记录删除,再创建新的,这样就完成了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu下安装Linux Apache MySQL PHP dbninja]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/05/ubuntuxia-an-zhuang-linux-apache-mysql-php-dbninja/"/>
    <updated>2014-01-05T14:06:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/05/ubuntuxia-an-zhuang-linux-apache-mysql-php-dbninja</id>
    <content type="html"><![CDATA[<h3>About dbninja</h3>

<p><a href="http://www.dbninja.com/">dbninja</a>是用基于web的一个开源免费的mysql数据库管理工具,有点类似于phpmyadmin,它的界面也是很美,功能很强大,安装很简单,我一般用来管理在rails下的mysql数据库,很方便</p>

<!-- more -->


<p><img src="http://yinsigan.github.io/images/dbninja.png"></p>

<h3>Set Up</h3>

<p>使用它必须安装php,在ubuntu下我们用apt-get直接安装apache+php+mysql</p>

<p>我的环境是ubuntu 13.04</p>

<h3>Step One &mdash; Install MySQL</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install mysql-server
</span></code></pre></td></tr></table></div></figure>


<p>这样就可以了,它会把mysql-client这种包也装上的,还有一些其他依赖的包</p>

<h3>Step two &mdash; Install Apache</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install apache2
</span></code></pre></td></tr></table></div></figure>


<p>装完后,下次开机apache会自动启动的,如果要重启</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/init.d/apache2 restart
</span></code></pre></td></tr></table></div></figure>


<h3>Step three &mdash; Install PHP</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install php5 libapache2-mod-php5 php5-mysql
</span></code></pre></td></tr></table></div></figure>


<h3>Step four &mdash; Install dbninja</h3>

<p>apache默认放项目的目录在/var/www</p>

<p>只要把下载的dbninja解压放在/var/www下即可</p>

<p>然后</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chmod 777 -R dbninja
</span></code></pre></td></tr></table></div></figure>


<p>这样在浏览器输入localhost/dbninja就可以访问了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[acts-as-taggable-on源码分析(二)]]></title>
    <link href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2/"/>
    <updated>2014-01-04T23:15:00+08:00</updated>
    <id>http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-2</id>
    <content type="html"><![CDATA[<p>继上节<a href="http://yinsigan.github.io/blog/2014/01/04/acts-as-taggable-onyuan-ma-fen-xi-1/">Acts-as-taggable-on源码分析(一)</a>我们继续来讲解</p>

<p>这节我们来分析各个模型之间的关系</p>

<p>acts-as-taggable-on主要涉及两个表,一个叫tags,它只有一个字段name,存的是tag的内容,还有一个表叫taggings</p>

<!-- more -->


<p>除了这两个主要表,我们还要给商品或新闻,或文章打tag,所以还需要这张表,这一部分的信息存在tagggins表中的taggable_id和taggable_type中,除此之外还可以指定是哪个用户打的tag,也就是tag的拥有者,我们用一个users表,它的信息存在taggings表中的tagger_type和tagger_id中</p>

<p>下面是它们的模型关系图</p>

<p><img src="http://yinsigan.github.io/images/acts_as_taggable_on/model.png"></p>

<h3>(一)tag.rb</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActsAsTaggableOn</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Tag</span> <span class="o">&lt;</span> <span class="o">::</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Utils</span>
</span><span class='line'>    <span class="n">has_many</span> <span class="ss">:taggings</span><span class="p">,</span> <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s1">&#39;ActsAsTaggableOn::Tagging&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>tag是has_many :taggings的</p>

<p>ActsAsTaggableOn::Utils的内容是</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActsAsTaggableOn</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Utils</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">base</span><span class="o">.</span><span class="n">send</span> <span class="ss">:include</span><span class="p">,</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Utils</span><span class="o">::</span><span class="no">OverallMethods</span>
</span><span class='line'>      <span class="n">base</span><span class="o">.</span><span class="n">extend</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Utils</span><span class="o">::</span><span class="no">OverallMethods</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">module</span> <span class="nn">OverallMethods</span>
</span><span class='line'>      <span class="c1"># 判断是否使用PostgreSQL</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">using_postgresql?</span>
</span><span class='line'>        <span class="o">::</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span> <span class="o">&amp;&amp;</span> <span class="o">::</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">adapter_name</span> <span class="o">==</span> <span class="s1">&#39;PostgreSQL&#39;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 判断是否使用SQLite</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">using_sqlite?</span>
</span><span class='line'>        <span class="o">::</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span> <span class="o">&amp;&amp;</span> <span class="o">::</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">adapter_name</span> <span class="o">==</span> <span class="s1">&#39;SQLite&#39;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># 生成六位数的随机乱码</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">sha_prefix</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>        <span class="ss">Digest</span><span class="p">:</span><span class="ss">:SHA1</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">string</span><span class="si">}#{</span><span class="nb">rand</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">6</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="kp">private</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">like_operator</span>
</span><span class='line'>        <span class="n">using_postgresql?</span> <span class="p">?</span> <span class="s1">&#39;ILIKE&#39;</span> <span class="p">:</span> <span class="s1">&#39;LIKE&#39;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># escape _ and % characters in strings, since these are wildcards in SQL.</span>
</span><span class='line'>      <span class="c1"># 跳脱!%_,在这三种字符前面加上!</span>
</span><span class='line'>       <span class="k">def</span> <span class="nf">escape_like</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>         <span class="n">str</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[!%_]/</span><span class="p">){</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="s1">&#39;!&#39;</span> <span class="o">+</span> <span class="n">x</span> <span class="p">}</span>
</span><span class='line'>       <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>(二)taggable.rb</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActsAsTaggableOn</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Taggable</span>
</span><span class='line'>    <span class="c1"># 默认为false</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">taggable?</span>
</span><span class='line'>      <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">acts_as_taggable</span>
</span><span class='line'>      <span class="n">acts_as_taggable_on</span> <span class="ss">:tags</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">acts_as_taggable_on</span><span class="p">(</span><span class="o">*</span><span class="n">tag_types</span><span class="p">)</span>
</span><span class='line'>      <span class="n">taggable_on</span><span class="p">(</span><span class="kp">false</span><span class="p">,</span> <span class="n">tag_types</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">taggable_on</span><span class="p">(</span><span class="n">preserve_tag_order</span><span class="p">,</span> <span class="o">*</span><span class="n">tag_types</span><span class="p">)</span>
</span><span class='line'>        <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>        <span class="nb">class_eval</span> <span class="k">do</span>
</span><span class='line'>          <span class="n">has_many</span> <span class="ss">:taggings</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:taggable</span><span class="p">,</span> <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tagging&quot;</span>
</span><span class='line'>          <span class="n">has_many</span> <span class="ss">:base_tags</span><span class="p">,</span> <span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:taggings</span><span class="p">,</span> <span class="ss">:source</span> <span class="o">=&gt;</span> <span class="ss">:tag</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tag&quot;</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">taggable?</span>
</span><span class='line'>            <span class="kp">true</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Utils</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>        <span class="c1"># called on each call of taggable_on</span>
</span><span class='line'>        <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Core</span>
</span><span class='line'>        <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Collection</span>
</span><span class='line'>        <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Cache</span>
</span><span class='line'>        <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Ownership</span>
</span><span class='line'>        <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Related</span>
</span><span class='line'>        <span class="kp">include</span> <span class="ss">ActsAsTaggableOn</span><span class="p">:</span><span class="ss">:Taggable</span><span class="o">::</span><span class="no">Dirty</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>taggable.rb主要是定义了acts_as_taggable这样的方法,这是主要的方法,在任何需要打tag的model都要用这个方法,这个方法还导入了很多modules</p>

<p>关键在这两行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:taggings</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:taggable</span><span class="p">,</span> <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tagging&quot;</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:base_tags</span><span class="p">,</span> <span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:taggings</span><span class="p">,</span> <span class="ss">:source</span> <span class="o">=&gt;</span> <span class="ss">:tag</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tag&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>(三)tagger.rb</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">acts_as_tagger</span><span class="p">(</span><span class="n">opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="nb">class_eval</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">has_many_with_compatibility</span> <span class="ss">:owned_taggings</span><span class="p">,</span>
</span><span class='line'>      <span class="n">opts</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span>
</span><span class='line'>        <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:tagger</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:destroy</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tagging&quot;</span>
</span><span class='line'>      <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">has_many_with_compatibility</span> <span class="ss">:owned_tags</span><span class="p">,</span>
</span><span class='line'>                                <span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:owned_taggings</span><span class="p">,</span>
</span><span class='line'>                                <span class="ss">:source</span> <span class="o">=&gt;</span> <span class="ss">:tag</span><span class="p">,</span>
</span><span class='line'>                                <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;ActsAsTaggableOn::Tag&quot;</span><span class="p">,</span>
</span><span class='line'>                                <span class="ss">:uniq</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>跟taggable.rb的关系有些类似,都是通过多态来实现的</p>

<h3>(四)tagging.rb</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActsAsTaggableOn</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Tagging</span> <span class="o">&lt;</span> <span class="o">::</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>    <span class="n">belongs_to</span> <span class="ss">:tag</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s1">&#39;ActsAsTaggableOn::Tag&#39;</span>
</span><span class='line'>    <span class="n">belongs_to</span> <span class="ss">:taggable</span><span class="p">,</span> <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">belongs_to</span> <span class="ss">:tagger</span><span class="p">,</span>   <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>很清晰的关系</p>

<p>下一节<a href="http://yinsigan.github.io/blog/2014/01/06/acts-as-taggable-onyuan-ma-fen-xi-3/">Acts-as-taggable-on源码分析(三)</a></p>
]]></content>
  </entry>
  
</feed>
